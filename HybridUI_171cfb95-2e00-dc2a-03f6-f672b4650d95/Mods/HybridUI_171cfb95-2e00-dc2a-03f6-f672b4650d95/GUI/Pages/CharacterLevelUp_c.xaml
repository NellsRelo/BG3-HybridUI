<ls:UIWidget x:Name="CharacterLevelUp_c"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ls="clr-namespace:ls;assembly=Code"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    mc:Ignorable="d"
    d:DesignHeight="2160" d:DesignWidth="3840"
    ls:UIWidget.ContextName="CharacterLevelUp"
    ls:TooltipExtender.Owner="{Binding LevelUpCharacter}"
    FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp" ls:MoveFocus.FocusMovementMode="Closest" CanCacheFocusSurroundingElements="False">

    <ls:UIWidget.Resources>
        <ResourceDictionary>

            <System:TimeSpan x:Key="LevelUpShowItemsStartTime">0:0:1.5</System:TimeSpan>
            <Duration x:Key="LevelUpTextAndBannerDuration">0:0:0.4</Duration>
            <Duration x:Key="LevelUpItemAppearDuration">0:0:0.2</Duration>
            <Duration x:Key="LevelUpAfterItemsDuration">0:0:0.2</Duration>
            <Duration x:Key="LevelUpSkipDuration">0:0:0.0</Duration>

            <DataTemplate x:Key="HPTooltipTooltip">
                <StackPanel Width="600">
                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h5702bcfbg5b6bg4c6cga370gbabede69cf41, Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                </StackPanel>
            </DataTemplate>

            <ControlTemplate x:Key="levelUpListBoxItemTemplate" TargetType="ListBoxItem">
                <ContentPresenter>
                    <b:Interaction.Triggers>
                        <b:DataTrigger Binding="{Binding Path=(ls:SequenceBehavior.PlayElement), RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                            <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c"/>
                        </b:DataTrigger>
                    </b:Interaction.Triggers>
                </ContentPresenter>
            </ControlTemplate>

            <Style x:Key="levelUpListBoxItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">

                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1" CenterX="400" CenterY="100"/>
                            <TranslateTransform X="0" Y="0"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>

                <Setter Property="noesis:StyleInteraction.Triggers">
                    <Setter.Value>
                        <noesis:StyleTriggerCollection>

                            <!-- Initially invisible -->
                            <b:DataTrigger Binding="{Binding DataContext.LevelUpStep, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Started">
                                <b:ChangePropertyAction PropertyName="Opacity" Value="0"/>
                            </b:DataTrigger>

                            <!-- Fade and scale in -->
                            <b:DataTrigger Binding="{Binding Path=(ls:SequenceBehavior.PlayElement), RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                    <b:ControlStoryboardAction.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="{StaticResource LevelUpItemAppearDuration}"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="2" To="1" Duration="{StaticResource LevelUpItemAppearDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="2" To="1" Duration="{StaticResource LevelUpItemAppearDuration}"/>

                                        </Storyboard>
                                    </b:ControlStoryboardAction.Storyboard>
                                </b:ControlStoryboardAction>
                                <ls:LSPlaySound  Sound="UI_LevelUp_Menu_Perks_Sequence"/>

                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding DataContext.LevelUpStep, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="SkipAnimation">
                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                    <b:ControlStoryboardAction.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource LevelUpSkipDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="1" Duration="{StaticResource LevelUpSkipDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="1" Duration="{StaticResource LevelUpSkipDuration}"/>                                            
                                        </Storyboard>
                                    </b:ControlStoryboardAction.Storyboard>
                                </b:ControlStoryboardAction>
                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding Path=(ls:SequenceBehavior.PlayedLastElement), RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                <ls:LSPlaySound  Sound="UI_LevelUp_Menu_SequenceEnds"/>
                            </b:DataTrigger>

                            <b:DataTrigger Binding="{Binding Path=(ls:SequenceBehavior.SequenceCompleted), ElementName=levelUpItemsSequence}" Value="True">
                                <b:ChangePropertyAction PropertyName="Opacity" Value="1"/>
                            </b:DataTrigger>

                        </noesis:StyleTriggerCollection>
                    </Setter.Value>
                </Setter>
            </Style>

            <Storyboard x:Key="LevelUpAppearStoryboard">
                <!-- Big "Level Up" text and banner -->
                <DoubleAnimation Storyboard.TargetName="LevelUpTextAndBanner" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="{StaticResource LevelUpTextAndBannerDuration}"/>
                <DoubleAnimation Storyboard.TargetName="LevelUpTextAndBanner" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="2" To="1" Duration="{StaticResource LevelUpTextAndBannerDuration}">
                    <DoubleAnimation.EasingFunction>
                        <BounceEase EasingMode="EaseOut" Bounces="1" Bounciness="10" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="LevelUpTextAndBanner" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="2" To="1" Duration="{StaticResource LevelUpTextAndBannerDuration}">
                    <DoubleAnimation.EasingFunction>
                        <BounceEase EasingMode="EaseOut" Bounces="1" Bounciness="10" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>

                <!-- VFX under Level Up! -->
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LevelUpTrail" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>

                <!-- Panel with big intro text moves up -->
                <DoubleAnimation Storyboard.TargetName="LevelUpTextAndBanner" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" BeginTime="0:0:1.3" From="0" To="-690" Duration="0:0:2">
                    <DoubleAnimation.EasingFunction>
                        <ElasticEase Oscillations="1" Springiness="15" EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="ClassIconBanner" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" BeginTime="0:0:1.3" From="0" To="-860" Duration="0:0:2">
                    <DoubleAnimation.EasingFunction>
                        <ElasticEase Oscillations="1" Springiness="15" EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="LevelTextPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" BeginTime="0:0:1.3" From="0" To="-850" Duration="0:0:2">
                    <DoubleAnimation.EasingFunction>
                        <ElasticEase Oscillations="1" Springiness="15" EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <!-- Banner fades out -->
                <DoubleAnimation Storyboard.TargetName="LevelUpBanner" Storyboard.TargetProperty="Opacity" BeginTime="0:0:1.3" From="1" To="0" Duration="0:0:0.3"/>

            </Storyboard>

            <Storyboard x:Key="LevelUpAppearSkipStoryboard">
                <!-- Big "Level Up" text and banner -->
                <DoubleAnimation Storyboard.TargetName="LevelUpTextAndBanner" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource LevelUpSkipDuration}"/>
                <DoubleAnimation Storyboard.TargetName="LevelUpTextAndBanner" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="{StaticResource LevelUpSkipDuration}"/>
                <DoubleAnimation Storyboard.TargetName="LevelUpTextAndBanner" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="{StaticResource LevelUpSkipDuration}"/>

                <!-- VFX under Level Up! -->
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LevelUpTrail" Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>

                <!-- Panel with big intro text moves up -->
                <DoubleAnimation Storyboard.TargetName="LevelUpIntroPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" To="-690" Duration="{StaticResource LevelUpSkipDuration}"/>

                <!-- Banner fades out -->
                <DoubleAnimation Storyboard.TargetName="LevelUpBanner" Storyboard.TargetProperty="Opacity" To="0" Duration="{StaticResource LevelUpSkipDuration}"/>

            </Storyboard>            
            
            <Storyboard x:Key="LevelUpAfterItemsStoryboard">

                <!-- Fade out intro text and fade in other UI elements -->
                <DoubleAnimation Storyboard.TargetName="LevelUpIntroPanel" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="{StaticResource LevelUpAfterItemsDuration}"/>

                <DoubleAnimation Storyboard.TargetName="tabBar" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource LevelUpAfterItemsDuration}"/>
                <DoubleAnimation Storyboard.TargetName="bottomButtons" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.2" To="1" Duration="{StaticResource LevelUpAfterItemsDuration}"/>
                <DoubleAnimation Storyboard.TargetName="leftSideShading" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.2" To="1" Duration="0:0:0.3"/>
                <DoubleAnimation Storyboard.TargetName="worldFader" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.3" To="0" Duration="0:0:0.3"/>

                <!-- Move left side panel from center -->
                <DoubleAnimation Storyboard.TargetName="leftSidePanels" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.5" AccelerationRatio="0.75" DecelerationRatio="0.25"/>

                <!-- Move right side panel onscreen -->
                <DoubleAnimation Storyboard.TargetName="summary" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="0:0:0.5" AccelerationRatio="0.75" DecelerationRatio="0.25"/>

            </Storyboard>

            <Storyboard x:Key="LevelUpAfterItemsSkipStoryboard">

                <!-- Fade out intro text and fade in other UI elements -->
                <DoubleAnimation Storyboard.TargetName="LevelUpIntroPanel" Storyboard.TargetProperty="Opacity" To="0" Duration="{StaticResource LevelUpSkipDuration}"/>

                <DoubleAnimation Storyboard.TargetName="tabBar" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource LevelUpSkipDuration}"/>
                <DoubleAnimation Storyboard.TargetName="bottomButtons" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource LevelUpSkipDuration}"/>
                <DoubleAnimation Storyboard.TargetName="leftSideShading" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource LevelUpSkipDuration}"/>
                <DoubleAnimation Storyboard.TargetName="worldFader" Storyboard.TargetProperty="Opacity" To="0" Duration="{StaticResource LevelUpSkipDuration}"/>

                <!-- Move left side panel from center -->
                <DoubleAnimation Storyboard.TargetName="leftSidePanels" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="{StaticResource LevelUpSkipDuration}" AccelerationRatio="0.75" DecelerationRatio="0.25"/>

                <!-- Move right side panel onscreen -->
                <DoubleAnimation Storyboard.TargetName="summary" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="0" Duration="{StaticResource LevelUpSkipDuration}" AccelerationRatio="0.75" DecelerationRatio="0.25"/>

            </Storyboard>

            <ControlTemplate x:Key="LevelUpBottomButtonsTemplate">
                <StackPanel Orientation="Horizontal">
                    <!-- Toggle tooltips -->
                    <ls:LSButton x:Name="ToggleTooltips" Margin="50,0,0,0"
                                 Command="ls:UIWidget.ToggleTooltipOnUIElementCommand"
                                 CommandParameter="{Binding FocusedElement, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ls:UIWidget}}"
                                 BoundEvent="UIShowInfo"
                                 ContentTemplate="{StaticResource ControllerButtonHint}"
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIShowInfo, Converter={StaticResource FindInputEventConverter}}"
                                 Tag="{Binding Source='hf8dd4c2fg97e0g4ccdgac1ag3cd1fe5060ef', Converter={StaticResource TranslatedStringConverter}}" TapTime="{StaticResource DefaultButtonTapTime}"/>

                    <!-- Multiclass button -->
                    <ls:LSButton x:Name="addClassButton" Visibility="Collapsed" IsEnabled="False" Command="{Binding DataContext.SelectFirstUnusedClass, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAddClass, Converter={StaticResource FindInputEventConverter}}" BoundEvent="UIAddClass" Tag="{Binding Source=hcbc3c9a8g9e80g4139g952bga971015c1f41,Converter={StaticResource TranslatedStringConverter}}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetName="levelupTab" PropertyName="Visibility" Value="Collapsed" />
                                <b:ChangePropertyAction TargetName="gameplayTabs" PropertyName="SelectedItem" Value="{Binding ElementName=classTab}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSButton x:Name="cancelAddClassButton" Visibility="Collapsed" Command="{Binding DataContext.SelectFirstUsedClass, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAddClass, Converter={StaticResource FindInputEventConverter}}" BoundEvent="UIAddClass" Tag="{Binding Source=hd8d647a9ga19bg47c6g9c46gc4b12ac464c8,Converter={StaticResource TranslatedStringConverter}}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetName="levelupTab" PropertyName="Visibility" Value="Visible" />
                                <b:ChangePropertyAction TargetName="gameplayTabs" PropertyName="SelectedItem" Value="{Binding ElementName=levelupTab}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSButton x:Name="showSummary" Visibility="{Binding ElementName=summary, Path=Visibility, Converter={StaticResource InvertVisibilityConverter}}"
                                 ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UISort, Converter={StaticResource FindInputEventConverter}}"
                                 BoundEvent="UISort" Tag="{Binding Source=h890f4cddg2bdcg4bb2gb73eg43fe16b11b08,Converter={StaticResource TranslatedStringConverter}}" EatInput="False" TapTime="{StaticResource DefaultButtonTapTime}" Margin="50,0,0,0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="False" />
                                <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="True" />
                                <b:ChangePropertyAction TargetName="summary" PropertyName="Visibility" Value="Visible"/>
                                <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c" FocusElement="{Binding ElementName=summaryPanel}"/>
                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource focusSummaryPanelStoryboard}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>
                    <ls:LSButton x:Name="hideSummary" Visibility="{Binding ElementName=summary, Path=Visibility}" ContentTemplate="{StaticResource ControllerButtonHint}"
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UISort, Converter={StaticResource FindInputEventConverter}}"
                                 BoundEvent="UISort" Tag="{Binding Source=h70ec62ddg0cfcg4512ga0c6gbc591945b75b,Converter={StaticResource TranslatedStringConverter}}" EatInput="False" TapTime="{StaticResource DefaultButtonTapTime}" Margin="50,0,0,0">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
                                <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                <b:ChangePropertyAction TargetName="summary" PropertyName="Visibility" Value="Collapsed"/>
                                <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSButton x:Name="exitButton" Style="{StaticResource ControllerHoldButtonStyle}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}"
                                 BoundEvent="UICancel" Tag="{Binding Source=hbc80c075g1c12g45a7gb006gfdc65eea207d,Converter={StaticResource TranslatedStringConverter}}" Margin="50,0,0,0" EatInput="False"
                                 Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="CloseWidget"/>
                    
                    <ls:LSInputBinding x:Name="PinTooltipBinding" Style="{StaticResource PinTooltipBindingStyle}"/>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding ShowUIElementTooltip, ElementName=CharacterLevelUp_c}" Value="True">
                        <Setter TargetName="ToggleTooltips" Property="Tag" Value="{Binding Source='hb33ec471gd611g4ee3gbbffg699af8f79167', Converter={StaticResource TranslatedStringConverter}}"/>
                    </DataTrigger>

                    <!-- Disable and collapse Toggle Tooltips button when draconic tab is selected -->
                    <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="draconic">
                        <Setter TargetName="ToggleTooltips" Property="IsEnabled" Value="False"/>
                        <Setter TargetName="ToggleTooltips" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>

                    <!-- Multiclass button visibility rules -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="levelup"/>
                            <Condition Binding="{Binding IsMulticlassEnabled}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="addClassButton" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="addClassButton" Property="IsEnabled" Value="True"/>
                    </MultiDataTrigger>
                    
                    <!-- Show cancel button when in multiclass selection mode -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class"/>
                            <Condition Binding="{Binding IsMulticlassEnabled}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="addClassButton" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="cancelAddClassButton" Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>



            <ControlTemplate x:Key="LevelUpFinishingTemplate">
                <Grid Background="Black" Opacity="0.5"/>
            </ControlTemplate>
        </ResourceDictionary>
    </ls:UIWidget.Resources>

    <b:Interaction.Behaviors>

        <ls:CollectionFilterBehavior x:Name="CurrentMultiClasses" ItemsSource="{Binding SelectableMultiClasses}" Predicate="{Binding IsCurrentClassPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="RaceProgressions" ItemsSource="{Binding RaceProgressionDetails.Progressions}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubRaceProgressions" ItemsSource="{Binding RaceProgressionDetails.Progressions}" Predicate="{Binding IsSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="ClassProgressions" ItemsSource="{Binding ClassProgressionDetails.Progressions}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubClassProgressions" ItemsSource="{Binding ClassProgressionDetails.Progressions}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="RaceSpellSelectors" ItemsSource="{Binding RaceProgressionDetails.SpellSelectors}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubRaceSpellSelectors" ItemsSource="{Binding RaceProgressionDetails.SpellSelectors}" Predicate="{Binding IsSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="ClassSpellSelectors" ItemsSource="{Binding ClassProgressionDetails.SpellSelectors}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubClassSpellSelectors" ItemsSource="{Binding ClassProgressionDetails.SpellSelectors}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="RacePassiveFeatures" ItemsSource="{Binding RacePassiveFeatures}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubRacePassiveFeatures" ItemsSource="{Binding RacePassiveFeatures}" Predicate="{Binding IsSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="RacePassiveSelectors" ItemsSource="{Binding RaceProgressionDetails.NotSubPassiveSelectors}"/>
        <ls:CollectionFilterBehavior x:Name="SubRacePassiveSelectors" ItemsSource="{Binding RaceProgressionDetails.SubPassiveSelectors}"/>
        <ls:CollectionFilterBehavior x:Name="ClassPassiveFeatures" ItemsSource="{Binding PassiveFeatures}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
        <ls:CollectionFilterBehavior x:Name="SubClassPassiveFeatures" ItemsSource="{Binding PassiveFeatures}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionSortBehavior x:Name="SortedRaceSkills" ItemsSource="{Binding AllSkills.RaceProficientSkills.Skills}" Comparer="{Binding SkillSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedClassSkills" ItemsSource="{Binding AllSkills.ClassProficientSkills.Skills}" Comparer="{Binding SkillSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedExpertiseSkills" ItemsSource="{Binding AllSkills.ExpertiseSkills.Skills}" Comparer="{Binding SkillSortComparer}" />

        <ls:CollectionSortBehavior x:Name="SortedSummarySkills" ItemsSource="{Binding ProgressionData.AllProgressions.Skills}" Comparer="{Binding SkillSortComparer}" />

        <ls:CollectionSortBehavior x:Name="SortedPreparableSpells" ItemsSource="{Binding SpellPrepare.Preparable}" Comparer="{Binding SpellByLevelSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedPreparableSpellGroupsByLevel" ItemsSource="{Binding SpellPrepare.PreparableByLevel}" Comparer="{Binding SpellGroupByLevelSortComparer}" />
    </b:Interaction.Behaviors>


    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <!-- Don't start in add new multiclass mode -->
            <b:InvokeCommandAction Command="{Binding SelectFirstUsedClass}"/>

            <!-- Tutorial UI Event - Level Up Opened-->
            <b:InvokeCommandAction Command="{Binding TutorialEvent}" CommandParameter="a9b0d917-809d-43bc-a3fb-6da86e6f517d"/>

            <!-- Start with Tooltips hidden -->
            <b:InvokeCommandAction Command="{Binding HideTooltipOnUIElementCommand, ElementName=CharacterLevelUp_c}"/>

            <!-- Center Dummy Character with Overview Camera at first -->
            <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
            <b:ChangePropertyAction TargetName="SetCameraControl" PropertyName="Template" Value="{StaticResource clearCameraOffsets}"/>

        </b:EventTrigger>

        <b:EventTrigger EventName="GotKeyboardFocus">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElementCommand, ElementName=CharacterLevelUp_c}" CommandParameter="{Binding Path=FocusedElement, ElementName=CharacterLevelUp_c}"/>
        </b:EventTrigger>
        <b:DataTrigger Binding="{Binding HasInputEnabled, ElementName=CharacterLevelUp_c}" Value="True">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElementCommand, ElementName=CharacterLevelUp_c}" CommandParameter="{Binding FocusedElement, ElementName=CharacterLevelUp_c}"/>
        </b:DataTrigger>

        <b:EventTrigger EventName="MoveFocusUp">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusDown">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusRight">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusLeft">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>

    </b:Interaction.Triggers>

    <ls:UIWidget.ContentTemplate>
        <DataTemplate>
            <Control x:Name="levelUpControl">
                <Control.Template>
                    <ControlTemplate>

                        <Grid x:Name="levelUp" IsEnabled="{Binding IsLocked, Converter={StaticResource InvertBoolConverter}}">

                            <Rectangle x:Name="bottomShading" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="{StaticResource bottomBackgroundHeight}" Fill="{StaticResource BottomShadingBrush}"/>
                            <Grid x:Name="worldFader" Background="Black" IsHitTestVisible="False"/>

                            <Grid HorizontalAlignment="Left">

                                <Rectangle x:Name="leftSideShading" HorizontalAlignment="Left" Opacity="0" Width="{StaticResource leftSidePanelBackgroundWidth}" Fill="{StaticResource LeftSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}"/>

                                <Grid x:Name="leftSidePanels" ls:MoveFocus.IsMoveFocusScope="True" MinWidth="1218" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,140,0,0" Tag="0">

                                    <Grid.RenderTransform>
                                        <!-- Start panel at left position during level up animation -->
                                        <TranslateTransform>
                                            <TranslateTransform.X>
                                                <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                    <!-- During level up animation, keep panel at left (TMin= 0) -->
                                                    <!-- After animation, allow normal centering behavior -->
                                                    <Binding ElementName="CharacterLevelUp_c" Path="ActualWidth" Converter="{StaticResource MultiplierConverter}" ConverterParameter="0"/>
                                                    <Binding ElementName="leftSidePanels" Path="ActualWidth" Converter="{StaticResource MultiplierConverter}" ConverterParameter="0"/>
                                                    <Binding ElementName="leftSidePanels" Path="Tag"/>
                                                </MultiBinding>
                                            </TranslateTransform.X>
                                        </TranslateTransform>
                                    </Grid.RenderTransform>

                                    <ContentControl x:Name="gameplaySubPanel" Content="{Binding .}">
                                        <b:Interaction.Triggers>
                                            <b:PropertyChangedTrigger Binding="{Binding Path=SelectedIndex, ElementName=gameplayTabs}">
                                                <b:Interaction.Behaviors>
                                                    <b:ConditionBehavior>
                                                        <b:ConditionalExpression>
                                                            <b:ComparisonCondition LeftOperand="{Binding Path=SelectedIndex, ElementName=gameplayTabs}" Operator="NotEqual" RightOperand="-1"/>
                                                        </b:ConditionalExpression>
                                                    </b:ConditionBehavior>
                                                </b:Interaction.Behaviors>
                                                <!-- clear subtab panel -->
                                                <b:ChangePropertyAction TargetName="gameplaySubPanel" PropertyName="DataContext" Value="{x:Null}"/>
                                            </b:PropertyChangedTrigger>
                                        </b:Interaction.Triggers>
                                    </ContentControl>

                                    <Control x:Name="gameplayPanel" Height="{StaticResource gameplayPanelHeightSplit}"/>

                                </Grid>

                            <!-- Tab Bar Background -->
                            <Rectangle x:Name="tabBarBackground" Width="3000" Height="{StaticResource TabsPanelHeight}" Fill="{StaticResource NavShadingBrush}" HorizontalAlignment="Left" VerticalAlignment="Top"/>

                            <StackPanel x:Name="tabBar" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="216,0,0,0" Width="3000">

                                <Grid x:Name="tabBarClipper" Width="3000" ClipToBounds="True" Tag="430">
                                    <!-- All the Gameplay Tabs -->
                                    <ListBox x:Name="gameplayTabs" VerticalAlignment="Center" SelectedIndex="0">
                                        <ListBox.Template>
                                            <ControlTemplate TargetType="ListBox">
                                                <Grid x:Name="templateRoot">
                                                    <b:Interaction.Behaviors>
                                                        <ls:SubListBoxBehavior x:Name="SubListBoxHelper" RootListBox="{Binding RelativeSource={RelativeSource TemplatedParent}}" DoPrevious="{Binding ElementName=prevTabButton, Path=IsPressed}" DoNext="{Binding ElementName=nextTabButton, Path=IsPressed}"/>
                                                    </b:Interaction.Behaviors>

                                                    <!-- No ScrollViewer -->
                                                    <Grid x:Name="backplate" Width="{Binding ElementName=SubListBoxHelper, Path=BackplateWidth}" MinWidth="{Binding ElementName=SubListBoxHelper, Path=RootListBox.SelectedItem.ActualWidth}"
                                                          Height="{StaticResource TabsPanelHeight}" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="Hidden">
                                                        <Grid.Tag>
                                                            <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                                <!-- Tab Offset -->
                                                                <Binding ElementName="SubListBoxHelper" Path="SelectedOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
                                                                <Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>
                                                                <Binding ElementName="tabBarClipper" Path="Tag"/>
                                                                <!-- Add backplate offset -->
                                                                <Binding ElementName="SubListBoxHelper" Path="BackplateOffset"/>
                                                            </MultiBinding>
                                                        </Grid.Tag>

                                                        <Grid.Background>
                                                            <LinearGradientBrush Opacity="1.0" StartPoint="0,0" EndPoint="0,1">
                                                                <GradientStop Offset="0" Color="{StaticResource transparentBlack}"/>
                                                                <GradientStop Offset="0.5" Color="#70af8768"/>
                                                                <GradientStop Offset="1.0" Color="#b0af8768" />
                                                            </LinearGradientBrush>
                                                        </Grid.Background>

                                                        <!-- Set Backplate position - todo improve animation -->
                                                        <Grid.RenderTransform>
                                                            <TranslateTransform X="{Binding ElementName=backplate,Path=Tag}" Y="0"/>
                                                        </Grid.RenderTransform>

                                                        <Grid.Resources>
                                                            <Storyboard x:Key="SlideBackplateAnimation">
                                                                <!-- FillBehavior cannot be set to Stop as that will cause some animation issues (see GUSX-14736 for more details) -->
                                                                <DoubleAnimation Storyboard.TargetName="backplate" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource BackplateSlideAnimationDuration}"
                                                                    AccelerationRatio="0.25" DecelerationRatio="0.25" To="{Binding ElementName=backplate,Path=Tag}" FillBehavior="HoldEnd"/>
                                                            </Storyboard>
                                                        </Grid.Resources>

                                                        <b:Interaction.Triggers>

                                                            <!-- Animated SelectedOffset -->
                                                            <b:PropertyChangedTrigger Binding="{Binding Path=SelectedOffset, ElementName=SubListBoxHelper}">
                                                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource SlideBackplateAnimation}"/>
                                                                <!-- Ensure offset calculated after startup animations have completed -->
                                                                <ls:LSControlStoryboard ControlStoryboardOption="Play" >
                                                                    <ls:LSControlStoryboard.Storyboard>
                                                                        <Storyboard x:Name="initialBackplateWidthSetting" Duration="0:0:0.4">
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="backplate">
                                                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </ls:LSControlStoryboard.Storyboard>
                                                                </ls:LSControlStoryboard>
                                                            </b:PropertyChangedTrigger>

                                                            <!-- When the storyboard is triggered, the Tag value bound to the To property keeps changing during the animation, so it could be that the animation ends and, then, 
                                                            the Tag value changes again, resulting on a wrong end position, so we need to check if the final position is the proper one and, otherwise, retrigger the animation -->
                                                            <b:StoryboardCompletedTrigger Storyboard="{StaticResource SlideBackplateAnimation}">
                                                                <b:Interaction.Behaviors>
                                                                    <b:ConditionBehavior>
                                                                        <b:ConditionalExpression>
                                                                            <b:ComparisonCondition LeftOperand="{Binding ElementName=backplate, Path=(UIElement.RenderTransform).(TranslateTransform.X)}" Operator="NotEqual" RightOperand="{Binding ElementName=backplate, Path=Tag}"/>
                                                                        </b:ConditionalExpression>
                                                                    </b:ConditionBehavior>
                                                                </b:Interaction.Behaviors>
                                                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource SlideBackplateAnimation}"/>
                                                            </b:StoryboardCompletedTrigger>

                                                            <b:PropertyChangedTrigger Binding="{Binding Path=Tag, ElementName=tabBarClipper}">
                                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                                    <b:ControlStoryboardAction.Storyboard>
                                                                        <Storyboard x:Name="slideBackplateSplitscreen">
                                                                            <DoubleAnimation Storyboard.TargetName="backplate" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource BackplateSlideAnimationDuration}"
                                                                                             AccelerationRatio="0.25" DecelerationRatio="0.25" To="{Binding ElementName=backplate,Path=Tag}" FillBehavior="Stop"/>
                                                                        </Storyboard>
                                                                    </b:ControlStoryboardAction.Storyboard>
                                                                </b:ControlStoryboardAction>
                                                            </b:PropertyChangedTrigger>
                                                            <b:TimerTrigger EventName="Loaded" SourceName="tabBarButtons" MillisecondsPerTick="280" TotalTicks="1">
                                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                                    <b:ControlStoryboardAction.Storyboard>
                                                                        <Storyboard >
                                                                            <DoubleAnimation Storyboard.TargetName="backplate" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.02" From="300"
                                                                                             To="{Binding ElementName=backplate,Path=Tag}" FillBehavior="Stop"/>
                                                                        </Storyboard>
                                                                    </b:ControlStoryboardAction.Storyboard>
                                                                </b:ControlStoryboardAction>
                                                            </b:TimerTrigger>

                                                        </b:Interaction.Triggers>
                                                    </Grid>

                                                    <Grid x:Name="itemsPanel">
                                                        <Grid.Tag>
                                                            <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                                <Binding ElementName="SubListBoxHelper" Path="SelectedOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
                                                                <Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>

                                                                <!-- Added to center tab over related gameplay panel -->
                                                                <Binding ElementName="tabBarClipper" Path="Tag"/>
                                                            </MultiBinding>
                                                        </Grid.Tag>

                                                        <Grid.RenderTransform>
                                                            <TranslateTransform X="{Binding ElementName=itemsPanel,Path=Tag}" Y="0"/>
                                                        </Grid.RenderTransform>

                                                        <Grid.Resources>
                                                            <Storyboard x:Key="ScrollTabsAnimation">
                                                                <!-- FillBehavior cannot be set to Stop as that will cause some animation issues (see GUSX-14736 for more details) -->
                                                                <DoubleAnimation Storyboard.TargetName="itemsPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource TabsSlideAnimationDuration}"
                                                                    AccelerationRatio="0.25" DecelerationRatio="0.25" To="{Binding ElementName=itemsPanel,Path=Tag}" FillBehavior="HoldEnd"/>
                                                            </Storyboard>
                                                        </Grid.Resources>

                                                        <b:Interaction.Triggers>
                                                            <!-- Animated SelectedOffset -->
                                                            <b:PropertyChangedTrigger Binding="{Binding Path=SelectedOffset, ElementName=SubListBoxHelper}">
                                                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource ScrollTabsAnimation}"/>
                                                            </b:PropertyChangedTrigger>

                                                            <!-- When the storyboard is triggered, the Tag value bound to the To property keeps changing during the animation, so it could be that the animation ends and, then, 
                                                            the Tag value changes again, resulting on a wrong end position, so we need to check if the final position is the proper one and, otherwise, retrigger the animation -->
                                                            <b:StoryboardCompletedTrigger Storyboard="{StaticResource ScrollTabsAnimation}">
                                                                <b:Interaction.Behaviors>
                                                                    <b:ConditionBehavior>
                                                                        <b:ConditionalExpression>
                                                                            <b:ComparisonCondition LeftOperand="{Binding ElementName=itemsPanel, Path=(UIElement.RenderTransform).(TranslateTransform.X)}" Operator="NotEqual" RightOperand="{Binding ElementName=itemsPanel, Path=Tag}"/>
                                                                        </b:ConditionalExpression>
                                                                    </b:ConditionBehavior>
                                                                </b:Interaction.Behaviors>
                                                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource ScrollTabsAnimation}"/>
                                                            </b:StoryboardCompletedTrigger>

                                                            <b:PropertyChangedTrigger Binding="{Binding Path=Tag, ElementName=tabBarClipper}">
                                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                                    <b:ControlStoryboardAction.Storyboard>
                                                                        <Storyboard x:Name="scrollTabsSplitscreen">
                                                                            <DoubleAnimation Storyboard.TargetName="itemsPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource TabsSlideAnimationDuration}"
                                                                                             AccelerationRatio="0.25" DecelerationRatio="0.25" To="{Binding ElementName=itemsPanel,Path=Tag}" FillBehavior="Stop"/>
                                                                        </Storyboard>
                                                                    </b:ControlStoryboardAction.Storyboard>
                                                                </b:ControlStoryboardAction>
                                                            </b:PropertyChangedTrigger>
                                                            <b:TimerTrigger EventName="Loaded" SourceName="tabBarButtons" MillisecondsPerTick="280" TotalTicks="1">
                                                                <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                                                    <b:ControlStoryboardAction.Storyboard>
                                                                        <Storyboard >
                                                                            <DoubleAnimation Storyboard.TargetName="itemsPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.02" From="300"
                                                                                             To="{Binding ElementName=itemsPanel,Path=Tag}" FillBehavior="Stop"/>
                                                                        </Storyboard>
                                                                    </b:ControlStoryboardAction.Storyboard>
                                                                </b:ControlStoryboardAction>
                                                            </b:TimerTrigger>

                                                        </b:Interaction.Triggers>
                                                        <ItemsPresenter/>

                                                    </Grid>

                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <!-- Manual backplate width calculation for related tabs -->

                                                    <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="levelup">
                                                        <Setter TargetName="backplate" Property="Width">
                                                            <Setter.Value>
                                                                <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                                    <Binding Path="ActualWidth" ElementName="levelup"/>
                                                                    <Binding Path="ActualWidth" ElementName="subClassTab"/>
                                                                    <Binding Path="ActualWidth" ElementName="deityTab"/>
                                                                    <Binding Path="ActualWidth" ElementName="spellPrepTab"/>
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class">
                                                        <Setter TargetName="backplate" Property="Width">
                                                            <Setter.Value>
                                                                <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                                    <Binding Path="ActualWidth" ElementName="classTab"/>
                                                                    <Binding Path="ActualWidth" ElementName="subClassTab"/>
                                                                    <Binding Path="ActualWidth" ElementName="deityTab"/>
                                                                    <Binding Path="ActualWidth" ElementName="spellPrepTab"/>
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass">
                                                        <Setter TargetName="backplate" Property="Width">
                                                            <Setter.Value>
                                                                <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                                    <Binding Path="ActualWidth" ElementName="subClassTab"/>
                                                                    <Binding Path="ActualWidth" ElementName="deityTab"/>
                                                                    <Binding Path="ActualWidth" ElementName="spellPrepTab"/>
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="feat">
                                                        <Setter TargetName="backplate" Property="Width">
                                                            <Setter.Value>
                                                                <MultiBinding Converter="{StaticResource AddMultipleConverter}">
                                                                    <Binding Path="ActualWidth" ElementName="featTab"/>
                                                                    <Binding Path="ActualWidth" ElementName="featDetailsTab"/>
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel x:Name="itemsPanel" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="Template" Value="{StaticResource gameplayTabTemplate2}"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            </Style>
                                        </ListBox.ItemContainerStyle>

                                            <ListBoxItem x:Name="levelupTab" Tag="levelup" IsSelected="True"/>
                                            <ListBoxItem x:Name="classTab" Tag="class" IsSelected="{Binding IsMultiClassLevelUp}" Visibility="{Binding Visibility, ElementName=levelupTab, Converter={StaticResource InvertVisibilityConverter}}"/>
                                            <ListBoxItem x:Name="subClassTab" Tag="subclass" IsEnabled="{Binding SelectableSubClasses.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
                                            <ListBoxItem x:Name="deityTab" Tag="deity" IsEnabled="{Binding SelectableDeities.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
                                            <ListBoxItem x:Name="spellPrepTab" Tag="spellprep" IsEnabled="{Binding SpellPrepare.Preparable.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
                                            <ListBoxItem x:Name="skillsTab" Tag="skills" IsEnabled="{Binding AllSkills.ClassProficientSkills.MaxSelectedSkillCount, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
                                            <ListBoxItem x:Name="expertiseTab" Tag="expertise" IsEnabled="{Binding AllSkills.ExpertiseSkills.MaxSelectedSkillCount, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
                                            <ListBoxItem x:Name="spellReplaceTab" Tag="spellreplace" IsEnabled="{Binding ClassProgressionDetails.InSpellReplacement, Converter={StaticResource NullToBoolFalseConverter}}"/>
                                            <ListBoxItem x:Name="draconicTab" Tag="draconic" IsEnabled="False"/>

                                            <ListBoxItem x:Name="raceTab" Tag="race" IsEnabled="False"/>
                                            <ListBoxItem x:Name="featTab" Tag="feat" IsEnabled="{Binding CanSelectFeat}"/>
                                            <ListBoxItem x:Name="featDetailsTab" Tag="featdetails" IsEnabled="{Binding SelectedFeatDetails.HasFeat}"/>
                                    </ListBox>

                                    <!-- Gameplay tab selector underlines -->
                                    <Grid x:Name="selectedTabUnderline" HorizontalAlignment="Left" Margin="102,88,0,0" Width="600" Visibility="Visible">
                                        <ls:LSNineSliceImage x:Name="tabSelector" Style="{StaticResource tabSelectorStyle}" Width="0" Margin="0,0,0,0"/>
                                    </Grid>

                                </Grid>

                            </StackPanel>

                            <!-- Tab Navigation Buttons -->
                            <StackPanel x:Name="tabBarButtons" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="50,0,0,0">
                                <ls:LSButton x:Name="prevTabButton" 
                                             IsEnabled="{Binding ElementName=SubListBoxHelper,Path=HasPrevious}"
                                             ContentTemplate="{StaticResource ControllerButtonHintImageOnly}"
                                             Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UITabPrev, Converter={StaticResource FindInputEventConverter}}"
                                             BoundEvent="UITabPrev"
                                             Margin="-20,0,-20,0"/>
                                <ls:LSButton x:Name="nextTabButton" 
                                             IsEnabled="{Binding ElementName=SubListBoxHelper,Path=HasNext}"
                                             ContentTemplate="{StaticResource ControllerButtonHintImageOnly}"
                                             Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UITabNext, Converter={StaticResource FindInputEventConverter}}"
                                             BoundEvent="UITabNext"
                                             Margin="-20,0,-20,0"/>
                            </StackPanel>

                            </Grid>

                            <!-- Venture Forth Button (always visible, like CharacterRespec_c.xaml confirm button) -->
                            <ContentControl Template="{StaticResource buttonBackplateTemplate}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,148">
                                <ls:LSButton x:Name="ventureForthButton" Style="{StaticResource ControllerHoldButtonStyle}" Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIDelete'}" Tag="{Binding Source='ha7867654g6f71g41ccgbd0bgba956a682293', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding DataContext.PlayDummyVFX, ElementName=CharacterLevelUp_c}" CommandParameter="VFX_UI_LevelUp_01" Margin="2,0,0,0">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="Click" >
                                            <b:ChangePropertyAction TargetName="levelUp" PropertyName="Visibility" Value="Collapsed" />
                                            <b:ChangePropertyAction TargetName="levelUp" PropertyName="IsEnabled" Value="False" />
                                            <b:InvokeCommandAction Command="{Binding DataContext.SetCameraMode, ElementName=CharacterLevelUp_c}" CommandParameter="Overview"/>
                                            <b:InvokeCommandAction Command="{Binding HideTooltipOnUIElementCommand, ElementName=CharacterLevelUp_c}"/>
                                        </b:EventTrigger>
                                        <b:TimerTrigger EventName="Click" MillisecondsPerTick="1400" TotalTicks="1">
                                            <b:InvokeCommandAction Command="{Binding DataContext.FinishLevelUp, ElementName=CharacterLevelUp_c}" CommandParameter="Overview"/>
                                        </b:TimerTrigger>
                                    </b:Interaction.Triggers>
                                </ls:LSButton>
                            </ContentControl>

                            <Grid x:Name="summary" Visibility="Collapsed" HorizontalAlignment="Right">
                                <Grid.RenderTransform>
                                    <TranslateTransform X="1000"/>
                                </Grid.RenderTransform>

                                <Rectangle x:Name="summaryBackground" HorizontalAlignment="Right" Width="{StaticResource summaryPanelBackgroundWidth}" RenderTransformOrigin="1,0.5" Fill="{StaticResource RightSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}">
                                    <Rectangle.RenderTransform>
                                        <ScaleTransform/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>

                                <Grid x:Name="summaryAnimPanel" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,230,34,0">
                                    <Grid.RenderTransform>
                                        <TranslateTransform X="0"/>
                                    </Grid.RenderTransform>

                                    <Control x:Name="summaryPanel" IsEnabled="False" ls:MoveFocus.IsMoveFocusScope="True" Template="{StaticResource summaryPanelTemplate}"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,70,16,0"/>

                                    <ls:LSInputBinding x:Name="backFromFocusedSummary" IsEnabled="{Binding IsEnabled, ElementName=summaryPanel}" BoundEvent="UICancel">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="LSInputBindingReleased" >
                                                <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
                                                <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                                <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
                                                <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
                                                <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate}"/>
                                                <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSInputBinding>

                                    <ls:LSButton x:Name="focusGameplayPanelButton" 
                                         Visibility="Hidden" 
                                         Tag=" "
                                         ContentTemplate="{StaticResource ControllerButtonHint}"
                                         Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleSummaryFocus'}"
                                         BoundEvent="ToggleSummaryFocus"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Top">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Click" >
                                                <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
                                                <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                                <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
                                                <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
                                                <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate}"/>
                                                <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ls:LSButton x:Name="focusSummaryPanelButton"
                                         Tag=" "
                                         ContentTemplate="{StaticResource ControllerButtonHint}"
                                         Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleSummaryFocus'}"
                                         BoundEvent="ToggleSummaryFocus"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Top">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="Click" >
                                                <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="False" />
                                                <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="True" />
                                                <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Hidden" />
                                                <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Visible" />
                                                <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource SummaryBottomButtonsTemplate}"/>
                                                <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c" FocusElement="{Binding ElementName=summaryPanel}"/>
                                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource focusSummaryPanelStoryboard}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                </Grid>
                            </Grid>

                            <StackPanel Style="{StaticResource ButtonHint.Container.Right}">
                                <Control x:Name="bottomButtons" Template="{StaticResource LevelUpBottomButtonsTemplate}"/>
                            </StackPanel>

                            <ls:LSInputBinding x:Name="PinTooltipBinding" Style="{StaticResource PinTooltipBindingStyle}" EatInput="False"/>

                            <!-- On opening the game menu, mark the session as cancelled so there won't be any fade -->
                            <ls:LSInputBinding BoundEvent="ToggleInGameMenu"
                                   PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                   Command="{Binding DataContext.SetAsCancelled, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                                   CommandParameter="{StaticResource TrueValue}"
                                   EatInput="False"/>

                            <!-- 
                
                    Animated LevelUp Intro
                
                    -->
                            <StackPanel x:Name="LevelUpIntroPanel" Height="800" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid x:Name="LevelUpTextAndBanner">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <!-- Banner image scaled from 1324x364 to 1080x297 -->
                                            <ScaleTransform CenterX="540" CenterY="148"/>
                                            <TranslateTransform Y="0"/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>

                                    <Image x:Name="LevelUpBanner" Source="{StaticResource LevelUpBanner}" Stretch="Uniform" Width="1080"/>

                                    <TextBlock x:Name="LevelUpText" Text="{Binding Source='he3ccedd0gceaeg4b1fg8e74g9dfc6da58cd2', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" VerticalAlignment="Top" Margin="0,60,0,0"/>

                                    <ls:AnimatedImage x:Name="LevelUpTrail" Style="{StaticResource trailVfx}" Margin="0,0,0,-300">
                                        <ls:AnimatedImage.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="90"/>
                                                <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                                                <TranslateTransform X="500" Y="50"/>
                                            </TransformGroup>
                                        </ls:AnimatedImage.RenderTransform>
                                    </ls:AnimatedImage>
                                </Grid>

                                <Image x:Name="ClassIconBanner" Style="{StaticResource ClassIconStyle}" Stretch="None" DataContext="{Binding SelectedMultiClass}" Margin="0,46,0,0">
                                    <Image.RenderTransform>
                                        <TranslateTransform Y="0"/>
                                    </Image.RenderTransform>
                                </Image>

                                <StackPanel x:Name="LevelTextPanel" Margin="0,-14,0,0">
                                    <StackPanel.RenderTransform>
                                        <TranslateTransform Y="0"/>
                                    </StackPanel.RenderTransform>
                                    <!-- Tav Level N -->
                                    <TextBlock x:Name="characterLevelText" Visibility="Hidden" Style="{StaticResource IconCarouselText}" FontSize="{StaticResource ScaledLargeFontSize}">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                <Binding Source="hc76e785eg7837g43a5g9cb5g55d46ed41522"/>
                                                <Binding Path="DummyCharacter.Name"/>
                                                <Binding Path="AvailableCharacterLevel"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>

                                    <!-- Class Lv N -->
                                    <TextBlock x:Name="classLevelText" Style="{StaticResource IconCarouselText}">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                <Binding Source="h1a47a847g893eg4cb2ga87bgaa23ee47055b"/>
                                                <Binding Path="SelectedMultiClass.Name"/>
                                                <Binding Path="SelectedMultiClass.Level" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>

                            <Control x:Name="SetCameraControl"/>

                            <!-- Skip LevelUp Animations -->
                            <ls:LSInputBinding x:Name="SkipAnimationInput" BoundEvent="UISkipDialog" EatInput="False">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="LSInputBindingPressed">
                                        <b:InvokeCommandAction Command="{Binding SetLevelUpStep}" CommandParameter="SkipAnimation"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </ls:LSInputBinding>

                            <b:Interaction.Triggers>

                                <b:EventTrigger EventName="Loaded">
                                    <b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>

                                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource LevelUpAppearStoryboard}"/>

                                    <ls:LSPlaySound  Sound="UI_LevelUp_Menu_SequenceStart"/>

                                </b:EventTrigger>

                                <b:DataTrigger Binding="{Binding LevelUpStep}" Value="SkipAnimation">
                                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource LevelUpAppearSkipStoryboard}"/>
                                </b:DataTrigger>

                                <!-- Enable Tooltips after animation -->
                                <b:DataTrigger Binding="{Binding LevelUpStep}" Value="IntroComplete">
                                    <b:InvokeCommandAction Command="{Binding EnableTooltipOnUIElementCommand, ElementName=CharacterLevelUp_c}"/>

                                    <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c" FocusElement="{Binding ElementName=gameplayPanel}"/>

                                    <b:ChangePropertyAction TargetName="SkipAnimationInput" PropertyName="IsEnabled" Value="False"/>
                                </b:DataTrigger>

                                <b:DataTrigger Binding="{Binding Path=IsVisible, ElementName=levelUp}" Value="True">
                                    <ls:LSPlaySound  Sound="UI_HUD_TriggerLevelUp"/>
                                </b:DataTrigger>

                            </b:Interaction.Triggers>

                        </Grid>

                        <ControlTemplate.Triggers>

                            <!-- Split Screen variation -->
                            <DataTrigger Binding="{Binding Layout}" Value="Common">
                                <Setter TargetName="leftSidePanels" Property="Margin" Value="170,140,0,0"/>
                                <Setter TargetName="leftSidePanels" Property="Tag" Value="-200"/>
                                <Setter TargetName="gameplayPanel" Property="Height" Value="{StaticResource gameplayPanelHeight}"/>
                                <Setter TargetName="tabBarClipper" Property="Tag" Value="580"/>
                                <Setter TargetName="tabBar" Property="Margin" Value="226,0,0,0"/>
                                <Setter TargetName="selectedTabUnderline" Property="Margin" Value="252,88,0,0"/>
                            </DataTrigger>

                            <!-- Selected Tab Underline Width Matching -->
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="race">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=raceTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subrace">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=subRaceTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=classTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=subClassTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="skills">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=skillsTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="expertise">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=expertiseTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellreplace">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=spellReplaceTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="feat">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=featTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="featdetails">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=featDetailsTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellprep">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=spellPrepTab}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="levelup">
                                <Setter TargetName="tabSelector" Property="Width" Value="{Binding Path=ActualWidth, ElementName=levelupTab}"/>
                            </DataTrigger>

                            <DataTrigger Value="False">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource EqualConverter}">
                                        <Binding Path="AvailableCharacterLevel"/>
                                        <Binding Path="SelectedMultiClass.Level" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter TargetName="characterLevelText" Property="Visibility" Value="Visible"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding LevelUpStep}" Value="IntroComplete">
                                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="True"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding FilteredItems.Count, ElementName=RaceSpellSelectors, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding FilteredItems.Count, ElementName=SubRaceSpellSelectors, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding FilteredItems.Count, ElementName=RaceProgressions, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding FilteredItems.Count, ElementName=SubRaceProgressions, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ProgressionData.RaceProgression.Other.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ProgressionData.RaceProgression.AbilityBonuses.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ProgressionData.RaceProgression.SaveProficiencies.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ProgressionData.RaceProgression.WeaponProficiencies.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ProgressionData.RaceProgression.ArmourProficiencies.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ProgressionData.RaceProgression.Skills.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="raceTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>

                            <!-- Subclass has a selection -->
                            <DataTrigger Binding="{Binding SelectableSubClasses.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="subClassTab" Property="Visibility" Value="Visible"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=(b:Interaction.Behaviors)[0].HasNext}" Value="False">
                                <Setter TargetName="nextTabButton" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>

            <!-- Disabled next/continue button if current subtab panel is incomplete -->
            <!-- <DataTrigger Binding="{Binding DataContext.IsComplete, ElementName=gameplaySubPanel}" Value="False">
                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
            </DataTrigger> -->            <!-- <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="skills"/>
                    <Condition Binding="{Binding Validity.ClassSelectors.SkillProficiencySelectors}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
            </MultiDataTrigger> -->            <!-- <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="expertise"/>
                    <Condition Binding="{Binding Validity.ClassSelectors.SkillExpertiseSelectors}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
            </MultiDataTrigger> -->                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="featdetails"/>
                                    <Condition Binding="{Binding SelectedFeatDetails.FeatDetails.IsAbilitySelectionComplete}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger>
            <!-- <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="feat"/>
                    <Condition Binding="{Binding SelectedFeatDetails.HasFeat, FallbackValue=False}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
            </MultiDataTrigger> -->

            <!-- <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellprep"/>
                    <Condition Binding="{Binding SpellPrepare.IsInvalid}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellprep"/>
                    <Condition Binding="{Binding SpellPrepare.IsComplete}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
            </MultiDataTrigger> -->                            <!-- Feats with ability points (e.g., Athlete) -->
                            <!-- <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=SelectedItem.Tag, ElementName=gameplayTabs}" Value="featdetails"/>
                                    <Condition Binding="{Binding Validity.RacialSelectors.AbilitySelectors}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=SelectedItem.Tag, ElementName=gameplayTabs}" Value="featdetails"/>
                                    <Condition Binding="{Binding Validity.ClassSelectors.AbilitySelectors}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger> -->

                            <!-- Feats with passives (e.g., Elemental Adept) -->
                            <!-- <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=SelectedItem.Tag, ElementName=gameplayTabs}" Value="featdetails"/>
                                    <Condition Binding="{Binding Validity.RacialSelectors.PassiveSelectors}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=SelectedItem.Tag, ElementName=gameplayTabs}" Value="featdetails"/>
                                    <Condition Binding="{Binding Validity.ClassSelectors.PassiveSelectors}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger> -->

                            <!-- Feats with skills (e.g., Skilled) -->
                            <!-- <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=SelectedItem.Tag, ElementName=gameplayTabs}" Value="featdetails"/>
                                    <Condition Binding="{Binding Validity.RacialSelectors.SkillProficiencySelectors}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=SelectedItem.Tag, ElementName=gameplayTabs}" Value="featdetails"/>
                                    <Condition Binding="{Binding Validity.ClassSelectors.SkillProficiencySelectors}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="nextTabButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger> -->

                            <DataTrigger Binding="{Binding IsLevelUpComplete}" Value="False">
                                <Setter TargetName="ventureForthButton" Property="IsEnabled" Value="False"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding Layout}" Value="Common">
                                <Setter TargetName="summary" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="ShowIfPossible">
                                <Setter TargetName="summary" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="summary" Property="Tag" Value=""/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="HideIfPossible">
                                <Setter TargetName="summary" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="summary" Property="Tag" Value=""/>
                            </DataTrigger>

                            <!-- Panel Triggers -->


                            <!-- Level Up Class -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="levelup"/>
                                    <Condition Binding="{Binding SelectedMultiClass.Level, Converter={StaticResource GreaterThanConverter}, 
ConverterParameter=0}" Value="True"/>
                                </MultiDataTrigger.Conditions>

                                <Setter TargetName="gameplayPanel" Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid>
                                                <Grid.Resources>
                                                    <Storyboard x:Key="levelUpAppear">

                                                        <DoubleAnimation Storyboard.TargetName="LevelUpAcquiredText" Storyboard.TargetProperty="Opacity" BeginTime="{StaticResource LevelUpShowItemsStartTime}" From="0" To="1" Duration="0:0:0.2"/>

                                                    </Storyboard>
                                                </Grid.Resources>
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="Loaded">
                                                        <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c"/>
                                                        <b:InvokeCommandAction Command="{Binding SetupClassesLoopingCommand}" CommandParameter="Owned"/>
                                                    </b:EventTrigger>

                                                    <!-- Animations (Only run once, not when changing tabs) -->
                                                    <b:DataTrigger Binding="{Binding LevelUpStep}" Value="Started">

                                                        <b:ChangePropertyAction TargetName="worldFader" PropertyName="Opacity" Value="0.85"/>

                                                        <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource levelUpAppear}"/>

                                                    </b:DataTrigger>

                                                    <b:DataTrigger Binding="{Binding LevelUpStep}" Value="SkipAnimation">
                                                        <b:ControlStoryboardAction ControlStoryboardOption="Stop" Storyboard="{StaticResource levelUpAppear}"/>
                                                    </b:DataTrigger>

                                                </b:Interaction.Triggers>
                                                <DockPanel x:Name="basePanel" Height="{StaticResource gameplayPanelHeight}" VerticalAlignment="Top">
                                                    
                                                    <Control x:Name="ClassCarouselControl" Template="{StaticResource ClassCarouselTemplate}" DockPanel.Dock="Top"/>
                                                    
                                                    <TextBlock x:Name="LevelUpAcquiredText" ls:TextBlockFormatter.SourceText="{Binding Source='h230f60c6g161fg481bgbe52g42bc264618dd', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource FeatureListHeaderText}" Margin="0,0,0,25" DockPanel.Dock="Top"/>
                                                    
                                                    <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}" DockPanel.Dock="Top" >
                                                        <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                                                            <ListBox x:Name="animatedLevelUpItems">

                                                                <ListBox.Template>
                                                                    <ControlTemplate TargetType="ListBox">
                                                                        <!-- No ScrollViewer -->
                                                                        <ItemsPresenter/>
                                                                    </ControlTemplate>
                                                                </ListBox.Template>

                                                                <b:Interaction.Behaviors>

                                                                    <ls:SequenceBehavior x:Name="levelUpItemsSequence" TimeOffset="0:0:0.5" CompletedDelay="0:0:0.5"/>

                                                                </b:Interaction.Behaviors>

                                                                <b:Interaction.Triggers>
                                                                    <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="2000" TotalTicks="1">
                                                                        <b:Interaction.Behaviors>
                                                                            <b:ConditionBehavior>
                                                                                <b:ConditionalExpression>
                                                                                    <b:ComparisonCondition LeftOperand="{Binding LevelUpStep}" Operator="Equal" RightOperand="Started"/>
                                                                                </b:ConditionalExpression>
                                                                            </b:ConditionBehavior>
                                                                        </b:Interaction.Behaviors>
                                                                        <b:ChangePropertyAction TargetName="levelUpItemsSequence" PropertyName="Animate" Value="True"/>
                                                                    </b:TimerTrigger>

                                                                    <b:DataTrigger Binding="{Binding LevelUpStep}" Value="SkipAnimation">
                                                                        <b:ChangePropertyAction TargetName="levelUpItemsSequence" PropertyName="TimeOffset" Value="0:0:0"/>
                                                                        <b:ChangePropertyAction TargetName="levelUpItemsSequence" PropertyName="CompletedDelay" Value="0:0:0"/>
                                                                        <b:ChangePropertyAction TargetName="levelUpItemsSequence" PropertyName="Animate" Value="True"/>

                                                                        <ls:LSControlStoryboard ControlStoryboardOption="Play" Storyboard="{StaticResource LevelUpAfterItemsSkipStoryboard}" CompletedCommand="{Binding SetLevelUpStep}" CompletedCommandParameter="IntroComplete"/>
                                                                        <b:ChangePropertyAction TargetName="SetCameraControl" PropertyName="Template" Value="{StaticResource setGameplayCameraOffsets}"/>
                                                                        <b:ChangePropertyAction TargetName="levelUp" PropertyName="IsHitTestVisible" Value="True"/>
                                                                    </b:DataTrigger>

                                                                    <b:DataTrigger Binding="{Binding ElementName=levelUpItemsSequence, Path=SequenceCompleted}" Value="True">
                                                                        <ls:LSControlStoryboard ControlStoryboardOption="Play" Storyboard="{StaticResource LevelUpAfterItemsStoryboard}" CompletedCommand="{Binding SetLevelUpStep}" CompletedCommandParameter="IntroComplete"/>

                                                                        <b:ChangePropertyAction TargetName="SetCameraControl" PropertyName="Template" Value="{StaticResource setGameplayCameraOffsets}"/>

                                                                        <b:ChangePropertyAction TargetName="levelUp" PropertyName="IsHitTestVisible" Value="True"/>
                                                                    </b:DataTrigger>
                                                                </b:Interaction.Triggers>

                                                                <!-- These ListBoxItems animate in at the start -->
                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Visibility="{Binding SelectableSubClasses.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource levelUpListBoxItemStyle}">
                                                                    <!-- Subclass available -->
                                                                    <ContentControl x:Name="Subclasses" ContentTemplate="{StaticResource SubclassesTemplate}" Content="{Binding .}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Visibility="{Binding CanSelectFeat, Converter={StaticResource BoolToVisibleConverter}}" Style="{StaticResource levelUpListBoxItemStyle}">
                                                                    <!-- Feat available -->
                                                                    <Control Template="{StaticResource FeatAvailableTemplate}"/>

                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}"  >
                                                                    <!-- HP -->
                                                                    <ContentControl x:Name="base" Template="{StaticResource ListButtonTemplate}" ls:MoveFocus.Focusable="True" Focusable="True" ToolTipService.Placement="Right">
                                                                        <ContentControl.ToolTip>
                                                                            <ls:LSTooltip ContentTemplate="{StaticResource HPTooltipTooltip}"/>
                                                                        </ContentControl.ToolTip>
                                                                        <Grid>
                                                                            <Grid Style="{StaticResource FeatureListItemIconHolder}">
                                                                                <Image x:Name="SlotHolder" Source="pack://application:,,,/Core;component/Assets/CharacterPanel/ico_hp.png" Width="96" Height="96" Stretch="UniformToFill"/>
                                                                                <Rectangle x:Name="icon" Fill="{Binding Icon}" Width="96" Height="96"/>
                                                                            </Grid>

                                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="160,0,0,0">
                                                                                <StackPanel.Resources>
                                                                                    <BitmapImage x:Key="SideArrow2Image" UriSource="pack://application:,,,/Core;component/Assets/CC/levelUp_sideArrow_h2.png" />
                                                                                    <Style TargetType="TextBlock">
                                                                                        <Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
                                                                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                                                                        <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                                                                                    </Style>
                                                                                </StackPanel.Resources>
                                                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h7f2fb117g1f87g4849ga4b8gd864068066b8', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledDefaultFontSize}" VerticalAlignment="Center" Margin="0,0,20,0"/>

                                                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.Health.Value}" VerticalAlignment="Center" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                                                                                <Image Source="{StaticResource SideArrowChunky}" Stretch="None" VerticalAlignment="Center" Margin="0,0,0,-4"/>
                                                                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.Health.Max}" VerticalAlignment="Center" Foreground="{StaticResource LS_tempHPColor}" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                                                                            </StackPanel>

                                                                        </Grid>
                                                                    </ContentControl>
                                                                </ListBoxItem>

                                                                <!-- Race progression elements -->
                                                                <ListBoxItem x:Name="racePassiveActions" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=RacePassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RacePassiveFeatures}" ItemTemplate="{StaticResource progressionActionsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subracePassiveActions" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubRacePassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRacePassiveFeatures}" ItemTemplate="{StaticResource progressionActionsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="racePassiveCantrips" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=RacePassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RacePassiveFeatures}" ItemTemplate="{StaticResource progressionCantripsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subracePassiveCantrips" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubRacePassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRacePassiveFeatures}" ItemTemplate="{StaticResource progressionCantripsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="racePassiveSpells" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=RacePassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RacePassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subracePassiveSpells" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubRacePassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRacePassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="raceProgressionActions" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=RaceProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RaceProgressions}" ItemTemplate="{StaticResource progressionActionsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subraceProgressionActions" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubRaceProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRaceProgressions}" ItemTemplate="{StaticResource progressionActionsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="raceProgressionCantrips" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=RaceProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RaceProgressions}" ItemTemplate="{StaticResource progressionCantripsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subraceProgressionCantrips" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubRaceProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRaceProgressions}" ItemTemplate="{StaticResource progressionCantripsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="raceProgressionSpells" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=RaceProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RaceProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subraceProgressionSpells" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubRaceProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRaceProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}"/>
                                                                </ListBoxItem>

                                                                
                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.ClassProgression.Other.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.ClassProgression.Other}" ItemTemplate="{StaticResource progressionFeatureBoost}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.ClassProgression.Skills.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.ClassProgression.Skills}" ItemTemplate="{StaticResource skillProgressionTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.ClassProgression.AbilityBonuses.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.ClassProgression.AbilityBonuses}" ItemTemplate="{StaticResource abilityProgressionTemplate}" Margin="0,20,0,0"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.ClassProgression.WeaponProficiencies.Count, Converter={StaticResource CountToVisibilityConverter}}">

                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.ClassProgression.WeaponProficiencies}" ItemTemplate="{StaticResource progressionFeatureBoost}"/>

                                                                </ListBoxItem>
                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.ClassProgression.ArmourProficiencies.Count, Converter={StaticResource CountToVisibilityConverter}}">

                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.ClassProgression.ArmourProficiencies}" ItemTemplate="{StaticResource progressionFeatureBoost}"/>

                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="classPassiveActions" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=ClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassPassiveFeatures}" ItemTemplate="{StaticResource progressionActionsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="classPassiveCantrips" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=ClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassPassiveFeatures}" ItemTemplate="{StaticResource progressionCantripsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="classPassiveSpells" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=ClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassPassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="classProgressionActions" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=ClassProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassProgressions}" ItemTemplate="{StaticResource progressionActionsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="classProgressionCantrips" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=ClassProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassProgressions}" ItemTemplate="{StaticResource progressionCantripsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="classProgressionSpells" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=ClassProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=ClassSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource levelUpListBoxItemStyle}">

                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}"/>

                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Visibility="{Binding ClassProgressionDetails.NotSubPassiveSelectors.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource levelUpListBoxItemStyle}">
                                                                    <ItemsControl ItemsSource="{Binding ClassProgressionDetails.NotSubPassiveSelectors}" ItemTemplate="{StaticResource progressionPassiveSelectors}" ItemContainerStyle="{StaticResource UpdateStateItemStyle}"/>
                                                                </ListBoxItem>

                                                                <!-- Subclass Features-->

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.SubClassProgression.Other.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.SubClassProgression.Other}" ItemContainerStyle="{DynamicResource progressionFeatureBoostStyle}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.SubClassProgression.Skills.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.SubClassProgression.Skills}" ItemTemplate="{StaticResource skillProgressionTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.SubClassProgression.AbilityBonuses.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.SubClassProgression.AbilityBonuses}" ItemTemplate="{StaticResource abilityProgressionTemplate}" Margin="0,20,0,0"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.SubClassProgression.WeaponProficiencies.Count, Converter={StaticResource CountToVisibilityConverter}}">

                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.SubClassProgression.WeaponProficiencies}" ItemTemplate="{StaticResource progressionFeatureBoost}"/>

                                                                </ListBoxItem>
                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding ProgressionData.SubClassProgression.ArmourProficiencies.Count, Converter={StaticResource CountToVisibilityConverter}}">

                                                                    <ItemsControl ItemsSource="{Binding ProgressionData.SubClassProgression.ArmourProficiencies}" ItemTemplate="{StaticResource progressionFeatureBoost}"/>

                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subclassPassiveActions" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassPassiveFeatures}" ItemTemplate="{StaticResource progressionActionsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subclassPassiveCantrips" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassPassiveFeatures}" ItemTemplate="{StaticResource progressionCantripsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subclassPassiveSpells" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassPassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}"/>
                                                                </ListBoxItem>


                                                                <ListBoxItem x:Name="subclassProgressionActions" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassProgressions}" ItemTemplate="{StaticResource progressionActionsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subclassProgressionCantrips" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassProgressions}" ItemTemplate="{StaticResource progressionCantripsTemplate}"/>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="subclassProgressionSpells" Template="{StaticResource levelUpListBoxItemTemplate}" Style="{StaticResource levelUpListBoxItemStyle}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassProgressions, Converter={StaticResource CountToVisibilityConverter}}">
                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}"/>
                                                                </ListBoxItem>


                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource levelUpListBoxItemStyle}">

                                                                    <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}"/>

                                                                </ListBoxItem>

                                                                <ListBoxItem Template="{StaticResource levelUpListBoxItemTemplate}" Visibility="{Binding ClassProgressionDetails.SubPassiveSelectors.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource levelUpListBoxItemStyle}">

                                                                    <ItemsControl ItemsSource="{Binding ClassProgressionDetails.SubPassiveSelectors}" ItemTemplate="{StaticResource progressionPassiveSelectors}" ItemContainerStyle="{StaticResource UpdateStateItemStyle}"/>

                                                                </ListBoxItem>

                                                            </ListBox>

                                                        </StackPanel>
                                                    </ScrollViewer>

                                                </DockPanel>

                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=classPassiveActions}" Value="0">
                                                    <Setter TargetName="classPassiveActions" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=classPassiveCantrips}" Value="0">
                                                    <Setter TargetName="classPassiveCantrips" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=classPassiveSpells}" Value="0">
                                                    <Setter TargetName="classPassiveSpells" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=classProgressionActions}" Value="0">
                                                    <Setter TargetName="classProgressionActions" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=classProgressionCantrips}" Value="0">
                                                    <Setter TargetName="classProgressionCantrips" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=classProgressionSpells}" Value="0">
                                                    <Setter TargetName="classProgressionSpells" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>

                                                <!-- Race progression triggers -->
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=raceFeatureSpells}" Value="0">
                                                    <Setter TargetName="raceFeatureSpells" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=subRaceFeatureSpells}" Value="0">
                                                    <Setter TargetName="subRaceFeatureSpells" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>

                                                <!-- Race progression triggers -->
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=racePassiveActions}" Value="0">
                                                    <Setter TargetName="racePassiveActions" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=racePassiveCantrips}" Value="0">
                                                    <Setter TargetName="racePassiveCantrips" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=racePassiveSpells}" Value="0">
                                                    <Setter TargetName="racePassiveSpells" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=raceProgressionActions}" Value="0">
                                                    <Setter TargetName="raceProgressionActions" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=raceProgressionCantrips}" Value="0">
                                                    <Setter TargetName="raceProgressionCantrips" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=raceProgressionSpells}" Value="0">
                                                    <Setter TargetName="raceProgressionSpells" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=subclassPassiveActions}" Value="0">
                                                    <Setter TargetName="subclassPassiveActions" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=subclassPassiveCantrips}" Value="0">
                                                    <Setter TargetName="subclassPassiveCantrips" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=subclassPassiveSpells}" Value="0">
                                                    <Setter TargetName="subclassPassiveSpells" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=subclassProgressionActions}" Value="0">
                                                    <Setter TargetName="subclassProgressionActions" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=subclassProgressionCantrips}" Value="0">
                                                    <Setter TargetName="subclassProgressionCantrips" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, ElementName=subclassProgressionSpells}" Value="0">
                                                    <Setter TargetName="subclassProgressionSpells" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="race">
                                <Setter TargetName="gameplayPanel" Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <DockPanel LastChildFill="True">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <StackPanel x:Name="RaceProgressions" Orientation="Horizontal" DockPanel.Dock="Top" Grid.Column="0" Grid.Row="0">
                                                        <Control Template="{StaticResource HUI_LevelUpRaceHeader}"/>
                                                    </StackPanel>
                                                    <Control Template="{StaticResource HUI_LevelUpRaceProgressions}" Grid.Row="1" />
                                                </Grid>
                                            </DockPanel>

                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="levelup">
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class">
                            </DataTrigger>

                            <!-- New MultiClass -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class"/>
                                    <Condition Binding="{Binding SelectedMultiClass.Level}" Value="0"/>
                                </MultiDataTrigger.Conditions>

                                <Setter TargetName="gameplayPanel" Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <DockPanel LastChildFill="True">
                                                <Control Template="{StaticResource setGameplayCameraOffsets}"/>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <StackPanel x:Name="multiclassSelectionAndDescription" Orientation="Horizontal" DockPanel.Dock="Top" Grid.Column="0" Grid.Row="0">
                                                        <Control Template="{StaticResource MultiClassSelectionTemplate}"/>
                                                    </StackPanel>

                                                    <Control Template="{StaticResource classProgressionsTemplate}" Grid.Column="0" Grid.Row="1"/>
                                                    <ContentControl Template="{StaticResource HUI_DescriptionTemplate}" 
                                                                      HorizontalAlignment="Left" DockPanel.Dock="Top" Grid.Column="1" Grid.RowSpan="2"
                                                                      Tag="{Binding SelectedMultiClass.Description}" />
                                                </Grid>
                                            </DockPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>

                            </MultiDataTrigger>

                            <!-- Subclass of a new multiclass -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass"/>
                                    <Condition Binding="{Binding SelectedMultiClass.Level}" Value="0"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource SubClassSelectorTemplate}"/>
                            </MultiDataTrigger>

                            <!-- Level Up SubClass (not new multiclass) -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass"/>
                                    <Condition Binding="{Binding SelectedMultiClass.Level, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource SubClassSelectorTemplate}"/>
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="draconic">
                                <Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource PassiveFeaturesAppearanceTemplate}"/>
                            </DataTrigger>

                            <!-- Show passiveFeaturesTab for Draconic Sorcerer -->
                            <DataTrigger Binding="{Binding SelectedSubClass.IsDraconicSorcerer}" Value="True">
                                <Setter TargetName="draconicTab" Property="IsEnabled" Value="True"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="deity">
                                <Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource DeitySelectorTemplate}"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="skills">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <DockPanel LastChildFill="True">
                                                  <Grid>
                                                    <Grid.RowDefinitions>
                                                      <RowDefinition Height="Auto" />
                                                      <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>

                                                    <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                      <StackPanel x:Name="backgroundCarouselAndDescription" Orientation="Horizontal" VerticalAlignment="Stretch" DockPanel.Dock="Top" Grid.Column="0" Grid.Row="0">
                                                          <Control Template="{StaticResource skillProficiencyPanelTemplate}"/>
                                                      </StackPanel>

                                                    </Grid>
                                                </DockPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="expertise">
                                    <Setter TargetName="gameplayPanel" Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <DockPanel LastChildFill="True">
                                                  <Grid>
                                                    <Grid.RowDefinitions>
                                                      <RowDefinition Height="Auto" />
                                                      <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Control Template="{StaticResource setGameplayCameraOffsets}"/>

                                                    <StackPanel x:Name="backgroundCarouselAndDescription" Orientation="Horizontal" VerticalAlignment="Stretch" DockPanel.Dock="Top" Grid.Column="0" Grid.Row="0">
                                                      <Control Template="{StaticResource skillExpertisePanelTemplate}"/>
                                                    </StackPanel>

                                                  </Grid>
                                                </DockPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellreplace">
                                <Setter TargetName="gameplayPanel" Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                                <DockPanel LastChildFill="True">
                                                  <Grid>
                                                    <Grid.RowDefinitions>
                                                      <RowDefinition Height="Auto" />
                                                      <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Loaded">
                                                            <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>

                                                    <StackPanel x:Name="SpellReplacementScreen" Orientation="Vertical" VerticalAlignment="Stretch"  DockPanel.Dock="Top" Grid.Column="0" Grid.Row="0">
                                                      <Control Template="{StaticResource spellReplaceTemplate}" Grid.Column="0" Grid.Row="0"/>
                                                    </StackPanel>

                                                    <Control Template="{StaticResource HUI_SelectorClosingTemplate}" Grid.Column="0" Grid.Row="1"/>

                                                </Grid>
                                            </DockPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellprep">
                                    <Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource HUI_SpellPrepTemplate}"/>
                                </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="feat">
                                <Setter TargetName="gameplayPanel" Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <DockPanel LastChildFill="True">
                                              <Grid>
                                                  <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                  </Grid.RowDefinitions>
                                                  <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                  </Grid.ColumnDefinitions>
                                                  <b:Interaction.Triggers>
                                                      <b:EventTrigger EventName="Loaded">
                                                          <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c"/>
                                                      </b:EventTrigger>
                                                  </b:Interaction.Triggers>

                                                  <StackPanel x:Name="featSelectionPanelTemplate" Orientation="Horizontal" VerticalAlignment="Stretch"  DockPanel.Dock="Top" Grid.Column="0" Grid.Row="0">
                                                      <Control Template="{StaticResource featSelectionTemplate}"/>
                                                  </StackPanel>

                                                  <Control Template="{StaticResource HUI_SelectorClosingTemplate}" Grid.Column="0" Grid.Row="1"/>
                                              </Grid>
                                            </DockPanel>

                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="featdetails">
                                <Setter TargetName="gameplayPanel" Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <DockPanel LastChildFill="True">
                                              <Grid>
                                                  <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                  </Grid.RowDefinitions>
                                                  <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                  </Grid.ColumnDefinitions>
                                                  <b:Interaction.Triggers>
                                                      <b:EventTrigger EventName="Loaded">
                                                          <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c"/>
                                                      </b:EventTrigger>
                                                  </b:Interaction.Triggers>

                                                  <StackPanel x:Name="featDetailsPanelTemplate" Orientation="Horizontal" VerticalAlignment="Stretch"  DockPanel.Dock="Top" Grid.Column="0" Grid.Row="0">
                                                      <Control Template="{StaticResource featDetailsTemplate}"/>
                                                  </StackPanel>

                                                  <Control Template="{StaticResource HUI_SelectorClosingTemplate}" Grid.Column="0" Grid.Row="1"/>
                                                    <ContentControl Template="{StaticResource HUI_DescriptionTemplate}" 
                                                                      HorizontalAlignment="Left" DockPanel.Dock="Top" Grid.Column="1" Grid.RowSpan="2"
                                                                      Tag="{Binding SelectedFeat.Description}" />
                                              </Grid>
                                            </DockPanel>

                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>



                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Control.Template>
            </Control>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding LevelUpStep}" Value="Started"/>
                        <Condition Binding="{Binding CurrentPlayer.IsScreenFadeActive}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <!-- Wait for fade to finish before starting animations -->
                    <Setter TargetName="levelUpControl" Property="Template" Value="{StaticResource LevelUpFadeInTemplate}"/>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding LevelUpStep}" Value="Finishing">
                    <Setter TargetName="levelUpControl" Property="Template" Value="{StaticResource LevelUpFinishingTemplate}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </ls:UIWidget.ContentTemplate>

</ls:UIWidget>
