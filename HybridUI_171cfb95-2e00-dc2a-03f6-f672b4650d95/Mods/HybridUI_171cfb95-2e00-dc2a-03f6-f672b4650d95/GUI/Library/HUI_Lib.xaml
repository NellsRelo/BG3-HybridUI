<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:System="clr-namespace:System;assembly=mscorlib"
					xmlns:ls="clr-namespace:ls;assembly=Code"
					xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
					mc:Ignorable="d">

    <BitmapImage x:Key="WideDivider" UriSource="pack://application:,,,/Core;component/Assets/CC/divider_levelUp.png"/>

    <!-- Decorator for Panel Headers -->
    <!-- Useage:
      <ContentControl Template="{StaticResource HUI_SelectorHeader}">
          <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='LOCALESTRING', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>
      </ContentControl> 
    -->
    <ControlTemplate x:Key="HUI_SelectorHeader">
        <StackPanel Width="{StaticResource gameplayPanelWidth}" HorizontalAlignment="Left" DockPanel.Dock="Top">
            <Image Source="{StaticResource CarouselDecoration}" Stretch="None" Margin="25,98,0,-148" Height="108" HorizontalAlignment="Center">
                <Image.RenderTransform>
                    <ScaleTransform ScaleY="-1"></ScaleTransform>
                </Image.RenderTransform>
            </Image>
            <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" 
                            ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentTemplate}"
                            HorizontalAlignment="Center"/>
        </StackPanel>
    </ControlTemplate>

    <!-- Closing template for Panels using the above header -->
    <ControlTemplate x:Key="HUI_SelectorClosingTemplate">
        <Grid HorizontalAlignment="Left">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0">
                <Image Source="{StaticResource CarouselDecoration}" Stretch="None" Margin="0,-50,0,0" Height="108" HorizontalAlignment="Center" />
            </StackPanel>
        </Grid>
    </ControlTemplate>

    <!-- Decorator for Carousel Headers & Text, using base image from Cantrip, Action, & Spell Container in CC Sidebar -->
    <!-- Useage: 
         <ContentControl Template="{StaticResource carouselHeaderDecorator}">
              <ListBox x:Name="DESCRIPTIVE_NAME" Template="{StaticResource CAROUSEL_TEMPLATE}" SelectedIndex="0" ItemsSource={Binding ITEMSOURCE} SelectedItem={Binding SELECTEDITEM}>
              </ListBox>
          </ContentControl>
    -->
    <ControlTemplate x:Key="HUI_CarouselHeaderDecorator">
        <Grid>
            <Image Style="{DynamicResource SummarySpellsDecorationStyle}" RenderOptions.BitmapScalingMode="Fant" Height="256" Width="{Binding ElementName=RaceCarousel, Path=ActualWidth}" Stretch="Fill"/>
            <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" 
                            ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentTemplate}"
                            HorizontalAlignment="Center" Height="100" Margin="0,0,0,0" />
        </Grid>
    </ControlTemplate>

    <!-- Decorator for Sub-Headers, stripped from CCLib_k for broader use -->
    <ControlTemplate x:Key="HUI_Decorated_Subheader">
        <ControlTemplate.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource LS_tint100}"/>
                <Setter Property="FontSize" Value="{StaticResource ScaledMediumFontSize}"/>
            </Style>
        </ControlTemplate.Resources>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Image Source="pack://application:,,,/Core;component/Assets/CC/decor_header.png" Stretch="None"/>
            <ContentPresenter Margin="30,0,30,0"/>
            <Image Source="pack://application:,,,/Core;component/Assets/CC/decor_header.png" Stretch="None">
                <Image.RenderTransform>
                    <ScaleTransform ScaleX="-1" CenterX="42"/>
                </Image.RenderTransform>
            </Image>
        </StackPanel>
    </ControlTemplate>

    <!-- Carousel for Hardcoded Strings -->
    <!-- Useage:
        <ListBox x:Name="TABNAME" Template="{StaticResource HUI_HardcodedCarousel}" SelectedIndex="0" Height="100" Margin="0,0,0,0">
            <ListBox.Items>
                <ListBoxItem Tag="TAB_ONE" Content="{Binding Source='LOCALESTRING', Converter={StaticResource TranslatedStringConverter}}"/>
                <ListBoxItem Tag="TAB_TWO" Content="{Binding Source='LOCALESTRING', Converter={StaticResource TranslatedStringConverter}}"/>
            </ListBox.Items>
        </ListBox>
    -->
    <ControlTemplate x:Key="HUI_HardcodedCarousel" TargetType="ListBox">
        <ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" Template="{StaticResource ListButtonTemplate}">
            <Grid>
                <ls:LSRepeatButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" SoundID="{DynamicResource CarouselButtonSoundEvent}">
                    <ls:LSRepeatButton.RenderTransform>
                        <ScaleTransform ScaleX="-1" CenterX="32"/>
                    </ls:LSRepeatButton.RenderTransform>
                </ls:LSRepeatButton>
                <ls:LSRepeatButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselRepeatButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" SoundID="{DynamicResource CarouselButtonSoundEvent}" />

                <TextBlock x:Name="cTxt" Text="{Binding SelectedItem.Content, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Style="{StaticResource IconCarouselText}" TextWrapping="NoWrap" MaxWidth="960" TextTrimming="CharacterEllipsis"/>

            </Grid>
            <b:Interaction.Triggers>
                <b:EventTrigger SourceName="leftBtn" EventName="Click">
                    <ls:SelectNextListBoxItem Reversed="True" TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" ForceSelect="True"/>
                </b:EventTrigger>
                <b:EventTrigger SourceName="rightBtn" EventName="Click">
                    <ls:SelectNextListBoxItem TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" ForceSelect="True"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ItemsSource.Count, ElementName=dots}" Value="1">
                <Setter TargetName="leftBtn" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="rightBtn" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- General Purpose Description Side-Panel Template -->
    <!-- Usage:
           <ContentControl Template="{StaticResource HUI_DescriptionTemplate}" 
                           Tag="{Binding SelectedClass.Description}" />
    -->
    <ControlTemplate x:Key="HUI_DescriptionTemplate">
        <StackPanel Width="{StaticResource gameplayPanelWidth}" HorizontalAlignment="Left" DockPanel.Dock="Top">
            <ContentControl x:Name="DescriptionBlock" Template="{StaticResource PanelSideDescription}" VerticalAlignment="Top" Margin="-650,200,0,0">
                <TextBlock x:Name="SelectionDescription" 
                           ls:TextBlockFormatter.SourceText="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" 
                           Style="{StaticResource CarouselSideDescriptionTextSplitScreen}" />
            </ContentControl>
        </StackPanel>

        <ControlTemplate.Triggers>
            <!-- Split Screen variation -->
            <DataTrigger Binding="{Binding Layout}" Value="Common">
                <Setter TargetName="SelectionDescription" Property="Style" Value="{StaticResource CarouselSideDescriptionText}"/>
                <Setter TargetName="DescriptionBlock" Property="Margin" Value="-400,200,0,0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Wide Separator for Splitting Content up. See Level-Up Screen for a visual example -->
    <!-- Useage:
          <ContentControl Template="{StaticResource HUI_WideSeparator}">
                .. Content Here
            </ContentControl>
    -->
    <ControlTemplate x:Key="HUI_WideSeparator">
        <Grid Margin="0,0,0,-30" HorizontalAlignment="Center" Width="Auto">
            <Image x:Name="wideSeparator" Source="{StaticResource WideDivider}" Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" 
                              ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentTemplate}"
                              />
        </Grid>
    </ControlTemplate>


    <!-- Ported from CCLib_c directly -->
    <Style x:Key="CarouselSideDescriptionText" TargetType="TextBlock" BasedOn="{StaticResource PanelDescriptionText}">
        <Setter Property="Foreground" Value="{StaticResource CCTextLight}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Width" Value="700"/>
        <Setter Property="Margin" Value="0,20,0,20"/>
    </Style>

    <Style x:Key="CarouselSideDescriptionTextSplitScreen" TargetType="TextBlock" BasedOn="{StaticResource PanelDescriptionText}">
        <Setter Property="Foreground" Value="{StaticResource CCTextLight}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Width" Value="450"/>
        <Setter Property="Margin" Value="0,20,0,20"/>
    </Style>

</ResourceDictionary>
