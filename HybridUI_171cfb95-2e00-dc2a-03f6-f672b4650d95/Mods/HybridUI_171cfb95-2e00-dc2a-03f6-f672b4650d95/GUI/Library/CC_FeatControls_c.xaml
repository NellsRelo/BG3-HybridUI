<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:System="clr-namespace:System;assembly=mscorlib"
					xmlns:ls="clr-namespace:ls;assembly=Code"
					xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
					mc:Ignorable="d">

          <!-- Feat Action Template, primarilly for Charger -->
          <DataTemplate x:Key="HUI_ProgressionFeatureAction" DataType="ls:VMFeatureBoost">
              <ContentControl Template="{StaticResource ListButtonTemplate}" x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="40" ToolTipService.VerticalOffset="-10">
                  <Grid>
                      <Grid x:Name="iconHolder" Style="{StaticResource FeatureListItemIconHolder}">
                          <Rectangle x:Name="icon" Width="96" Height="96" Fill="{Binding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                          <Image x:Name="fallbackIcon" Source="{StaticResource IconFeatDefaultBrush}" Width="96" Height="96" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden"/>
                      </Grid>
                      <TextBlock x:Name="featureName" Text="{Binding Name}" Style="{StaticResource FeatureListItemName}"/>
                      <TextBlock x:Name="featureKind" Text="{Binding FeatureType}" Style="{StaticResource FeatureListItemKind}"/>
                  </Grid>
              </ContentControl>
              <DataTemplate.Triggers>
                  <!-- Show fallback icon if custom icon is not available -->
                  <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                      <Setter TargetName="icon" Property="Visibility" Value="Hidden"/>
                      <Setter TargetName="fallbackIcon" Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                  <!-- Focus state triggers -->
                  <DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=base}" Value="True">
                      <Setter TargetName="featureName" Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                      <Setter TargetName="featureKind" Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                  </DataTrigger>
              </DataTemplate.Triggers>
          </DataTemplate>

          <ControlTemplate x:Key="featSelectionTemplate">
              <DockPanel>
                  <StackPanel Width="{StaticResource gameplayPanelWidth}" HorizontalAlignment="Left" DockPanel.Dock="Top">
                      <ContentControl Template="{StaticResource HUI_SelectorHeader}">
                          <TextBlock x:Name="featsTitle" ls:TextBlockFormatter.SourceText="{Binding Source='hb7180a49g729ag4ec3g9f87gaeadb7d4252c', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} (1/1)'}" Style="{StaticResource PanelHeaderText}"/>
                      </ContentControl>

                      <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h3a0e9481ge605g41fbgb7fag21d4a45f0c93', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelDescriptionText}" Margin="0,20,0,40"/>
                  </StackPanel>

                  
                  <StackPanel x:Name="featList" Orientation="Horizontal" DockPanel.Dock="Top">
                      <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}"
                                VerticalScrollBarVisibility="Auto" MaxHeight="1400" Height="Auto"
                                DockPanel.Dock="Top" Margin="0,20,0,-20">

                              <ListBox x:Name="featsList" ItemsSource="{Binding SelectableFeats}" SelectedItem="{Binding SelectedFeat}">
                                  <ListBox.Template>
                                      <ControlTemplate TargetType="ListBox">
                                          <ItemsPresenter/>
                                      </ControlTemplate>
                                  </ListBox.Template>

                                  <ListBox.ItemsPanel>
                                      <ItemsPanelTemplate>
                                          <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical"/>
                                      </ItemsPanelTemplate>
                                  </ListBox.ItemsPanel>

                                  <ListBox.ItemTemplate>
                                      <DataTemplate DataType="ls:VMSelectableFeat">
                                          <ContentControl Template="{StaticResource InteractiveListButtonTemplate}" x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True">
                                              <ContentControl.ToolTip>
                                                  <ls:LSTooltip Content="{Binding DataContext, ElementName=base}">
                                                      <ToolTip.ContentTemplate>
                                                          <DataTemplate>

                                                              <StackPanel>

                                                                  <TextBlock ls:TextBlockFormatter.SourceText="{Binding Description}" Foreground="{StaticResource LS_accent100TxtColor}" FontSize="{StaticResource ScaledDefaultFontSize}" MaxWidth="{StaticResource MaxTooltipContentWidth}" TextWrapping="Wrap" Margin="0,20,0,20"/>

                                                                  <StackPanel x:Name="unmetRequirements" Visibility="Collapsed">
                                                                      <TextBlock Text="{Binding Source='he7dbfbb3g279cg4872gab74g3b11497fc320', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                                                                      <ItemsControl ItemsSource="{Binding Requirements}">
                                                                          <ItemsControl.ItemTemplate>
                                                                              <DataTemplate>
                                                                                  <TextBlock x:Name="req" Text="{Binding Requirement}" TextWrapping="Wrap" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                                                                                  <DataTemplate.Triggers>
                                                                                      <DataTrigger Binding="{Binding IsMet}" Value="False">
                                                                                          <Setter TargetName="req" Property="Foreground" Value="{DynamicResource LS_alertTxtColor}"/>
                                                                                      </DataTrigger>
                                                                                  </DataTemplate.Triggers>
                                                                              </DataTemplate>
                                                                          </ItemsControl.ItemTemplate>
                                                                      </ItemsControl>
                                                                  </StackPanel>
                                                              </StackPanel>
                                                              <DataTemplate.Triggers>
                                                                  <DataTrigger Binding="{Binding IsRequirementsMet}" Value="False">
                                                                      <Setter TargetName="unmetRequirements" Property="Visibility" Value="Visible"/>
                                                                  </DataTrigger>
                                                              </DataTemplate.Triggers>
                                                          </DataTemplate>
                                                      </ToolTip.ContentTemplate>
                                                  </ls:LSTooltip>
                                              </ContentControl.ToolTip>

                                              <Grid>
                                                  <Grid Style="{StaticResource FeatureListItemIconHolder}">
                                                      <Rectangle x:Name="icon" Width="96" Height="96" Fill="{Binding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                  </Grid>

                                                  <TextBlock x:Name="text" ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource FeatureListItemName}"/>

                                                  <Image x:Name="tick" Visibility="Collapsed" Source="{StaticResource IconTick}" Stretch="None" HorizontalAlignment="Right" Margin="0,0,110,0"/>
                                                  <Image x:Name="lock" Visibility="Collapsed" Source="pack://application:,,,/Core;component/Assets/CharacterLevelup/ico_locked.png" Stretch="None" HorizontalAlignment="Right" Margin="0,0,40,0"/>

                                                  <ls:LSButton x:Name="selectFeatIcon" ContentTemplate="{StaticResource ControllerButtonHintImageOnly}" Visibility="Collapsed" Content="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="-50,-50,0,-50" />

                                                  <ls:LSInputBinding x:Name="selectFeat" BoundEvent="UIAccept" IsEnabled="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=base}">
                                                      <b:Interaction.Triggers>
                                                          <b:EventTrigger EventName="LSInputBindingReleased" >
                                                              <b:ChangePropertyAction TargetName="featsList" PropertyName="SelectedItem" Value="{Binding}" />
                                                              <ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
                                                          </b:EventTrigger>
                                                      </b:Interaction.Triggers>
                                                  </ls:LSInputBinding>

                                              </Grid>
                                          </ContentControl>
                                          <DataTemplate.Triggers>
                                              <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                  <Setter TargetName="tick" Property="Visibility" Value="Visible"/>
                                                  <Setter TargetName="selectFeat" Property="IsEnabled" Value="False"/>
                                              </DataTrigger>
                                              <DataTrigger Binding="{Binding IsAlreadyTaken}" Value="True">
                                                  <Setter TargetName="selectFeat" Property="IsEnabled" Value="False"/>
                                                  <Setter TargetName="tick" Property="Visibility" Value="Visible"/>
                                                  <Setter TargetName="tick" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                                                  <Setter TargetName="text" Property="Foreground" Value="{StaticResource LS_baseTxtColor}"/>
                                                  <Setter TargetName="base" Property="Template" Value="{StaticResource ListButtonTemplate}"/>
                                              </DataTrigger>
                                              <DataTrigger Binding="{Binding IsRequirementsMet}" Value="False">
                                                  <Setter TargetName="selectFeat" Property="IsEnabled" Value="False"/>
                                                  <Setter TargetName="lock" Property="Visibility" Value="Visible"/>
                                                  <Setter TargetName="base" Property="Template" Value="{StaticResource ListButtonTemplate}"/>
                                              </DataTrigger>
                                              <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                                                  <Setter TargetName="icon" Property="Fill" Value="{StaticResource IconFeatDefaultBrush}"/>
                                              </DataTrigger>
                                              <MultiDataTrigger>
                                                  <MultiDataTrigger.Conditions>
                                                      <Condition Binding="{Binding IsRequirementsMet}" Value="True"/>
                                                      <Condition Binding="{Binding IsAlreadyTaken}" Value="False"/>
                                                      <Condition Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=base}" Value="True" />
                                                  </MultiDataTrigger.Conditions>
                                                  <Setter TargetName="selectFeatIcon" Property="Visibility" Value="Visible"/>
                                              </MultiDataTrigger>
                                          </DataTemplate.Triggers>
                                      </DataTemplate>
                                  </ListBox.ItemTemplate>
                              </ListBox>

                      </ScrollViewer>
                  </StackPanel>
              </DockPanel>
          <ControlTemplate.Triggers>
              <DataTrigger Binding="{Binding SelectedFeat}" Value="{x:Null}">
                  <Setter TargetName="featsTitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb7180a49g729ag4ec3g9f87gaeadb7d4252c', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} (0/1)'}"/>
              </DataTrigger>
          </ControlTemplate.Triggers>
          </ControlTemplate>

          <ControlTemplate x:Key="featDetailsTemplate">
              <DockPanel DataContext="{Binding SelectedFeatDetails}">
                  <StackPanel Width="{StaticResource gameplayPanelWidth}" HorizontalAlignment="Left" DockPanel.Dock="Top">
                      <ContentControl Template="{StaticResource HUI_SelectorHeader}">
                          <TextBlock ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource PanelHeaderText}"/>
                      </ContentControl>

                  </StackPanel>
                  
                  <StackPanel x:Name="featDetailScroller" Orientation="Horizontal" DockPanel.Dock="Top" Margin="0,0,0,-15">
                      <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}"
                                VerticalScrollBarVisibility="Auto" MaxHeight="1250" Height="Auto"
                                DockPanel.Dock="Top" Margin="0,20,0,0">
                          <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

                              <!-- Boosts and Abilities -->
                              <ItemsControl ItemsSource="{Binding FeatDetails.Progressions}" Margin="0,20,0,0">
                                  <ItemsControl.ItemTemplate>
                                      <DataTemplate DataType="ls:VMProgression">
                                          <StackPanel>
                                              <ItemsControl ItemsSource="{Binding Features.Boosts}" ItemTemplate="{StaticResource progressionFeatureBoost}"/>

                                              <ItemsControl ItemsSource="{Binding Features.Abilities}" ItemTemplate="{StaticResource progressionFeatureAbility}"/>
                                              <ItemsControl ItemsSource="{Binding Features.Actions}" ItemTemplate="{StaticResource HUI_ProgressionFeatureAction}"/>
                                          </StackPanel>
                                      </DataTemplate>
                                  </ItemsControl.ItemTemplate>
                              </ItemsControl>

                              <!-- Ability Selectors -->
                              <StackPanel x:Name="abilitySelection" Visibility="{Binding FeatDetails.AbilitySelection.Count, Converter={StaticResource CountToVisibilityConverter}}">

                                  <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,50,0,0">
                                      <TextBlock x:Name="AbilitySelectionTitle" ls:TextBlockFormatter.SourceText="{Binding Source='h72161eb0g8981g45cfgba63ga76e152e1fe9', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextNormal}"/>
                                      <TextBlock x:Name="AbilitySelectionValue" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}" Margin="20,0,0,0">
                                          <Run Text="{Binding FeatDetails.SelectedAbilityCount}"/><Run Text="{Binding FeatDetails.MaxSelectedAbilityCount, StringFormat='/{0}'}"/>
                                      </TextBlock>
                                  </StackPanel>

                                  <ItemsControl ItemsSource="{Binding FeatDetails.AbilitySelection}" ItemTemplate="{StaticResource changeAbilityTemplate}">
                                      <ItemsControl.Resources>
                                          <ControlTemplate x:Key="buttonsAndValue">
                                              <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="400,0,0,0">
                                                  <ls:LSButton x:Name="leftBtn" BoundEvent="UILeft" IsEnabled="{Binding Improvement, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Command="{Binding DataContext.DeselectAbility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Center" SoundID="UI_HUD_CC_DecreaseAbility">
                                                      <ls:LSButton.RenderTransform>
                                                          <ScaleTransform ScaleX="-1" CenterX="32"/>
                                                      </ls:LSButton.RenderTransform>
                                                  </ls:LSButton>

                                                  <TextBlock x:Name="value" ls:TextBlockFormatter.SourceText="{Binding Value}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="LightGreen" TextAlignment="Center" MinWidth="80" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                                  <ls:LSButton x:Name="rightBtn" BoundEvent="UIRight" Command="{Binding DataContext.SelectAbility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Center" SoundID="UI_HUD_CC_IncreaseAbility"/>
                                              </StackPanel>
                                              <ControlTemplate.Triggers>

                                                  <DataTrigger Binding="{Binding Improvement}" Value="0">
                                                      <Setter TargetName="value" Property="Foreground" Value="{StaticResource CCTextPrimary}"/>
                                                  </DataTrigger>

                                                  <MultiDataTrigger>
                                                      <MultiDataTrigger.Conditions>
                                                          <Condition Value="True">
                                                              <Condition.Binding>
                                                                  <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                                                                      <Binding Path="Improvement"/>
                                                                      <Binding Path="DataContext.FeatDetails.MaxSelectedAbilityCount" ElementName="editFeatPanel"/>
                                                                  </MultiBinding>
                                                              </Condition.Binding>
                                                          </Condition>
                                                      </MultiDataTrigger.Conditions>
                                                      <Setter TargetName="rightBtn" Property="IsEnabled" Value="False"/>
                                                  </MultiDataTrigger>

                                              </ControlTemplate.Triggers>
                                          </ControlTemplate>
                                      </ItemsControl.Resources>
                                  </ItemsControl>
                              </StackPanel>

                              <!-- Skills -->
                              <StackPanel x:Name="skillSelection" Visibility="{Binding FeatSkills.Skills.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                  <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,50,0,0">
                                      <TextBlock x:Name="SkillSelectionTitle" ls:TextBlockFormatter.SourceText="{Binding Source='h0bddbaf0g8c93g4ddfgbb52ge3c54b72c3c6', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextNormal}"/>
                                      <TextBlock x:Name="SkillSelectionValue" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}" Margin="20,0,0,0">
                                          <Run Text="{Binding FeatSkills.SelectedSkillCount}"/><Run Text="{Binding FeatSkills.MaxSelectedSkillCount, StringFormat='/{0}'}"/>
                                      </TextBlock>
                                  </StackPanel>

                                  <ItemsControl ItemsSource="{Binding FeatSkills.Skills}" ItemTemplate="{StaticResource selectableSkillTemplate}" Margin="0,30,0,0"/>
                              </StackPanel>

                              <!-- Passive Selectors-->
                              <ItemsControl ItemsSource="{Binding FeatPassives}">
                                  <ItemsControl.ItemTemplate>
                                      <DataTemplate DataType="ls:VMCharacterCreationPassives">
                                          <StackPanel>
                                              <TextBlock x:Name="description" Visibility="{Binding Description.Text, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}" ls:TextBlockFormatter.SourceText="{Binding Description.Text}" Style="{StaticResource PanelDescriptionText}" Margin="0,20,0,0"/>

                                              <TextBlock x:Name="SelectedTitle" Style="{StaticResource PanelSubHeaderText}" Margin="0,50,0,0">
                                                  <Run Text="{Binding Source='h390a9286g28cag49ceg93c5gd5b7c1e962da', Converter={StaticResource TranslatedStringConverter}}"/>
                                                  <Run Text="{Binding SelectedPassiveCount, StringFormat=' {0}'}"/>
                                                  <Run x:Name="PassiveSelectorMaxText" Text="{Binding MaxSelectedPassiveCount, StringFormat='/{0}'}"/>
                                              </TextBlock>

                                              <ItemsControl ItemsSource="{Binding Passives}" ItemTemplate="{StaticResource SelectablePassiveTemplate}"/>

                                          </StackPanel>

                                          <DataTemplate.Triggers>
                                              <DataTrigger Binding="{Binding IsComplete}" Value="False">
                                                  <Setter TargetName="SelectedTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                                              </DataTrigger>
                                              <MultiDataTrigger>
                                                  <MultiDataTrigger.Conditions>
                                                      <Condition Binding="{Binding IsComplete}" Value="True"/>
                                                      <Condition Value="True">
                                                          <Condition.Binding>
                                                              <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                                                                  <Binding Path="MaxSelectedPassiveCount"/>
                                                                  <Binding Path="SelectedPassiveCount"/>
                                                              </MultiBinding>
                                                          </Condition.Binding>
                                                      </Condition>
                                                  </MultiDataTrigger.Conditions>
                                                  <Setter TargetName="PassiveSelectorMaxText" Property="Text" Value="{Binding SelectedPassiveCount, StringFormat='/{0}'}"/>
                                              </MultiDataTrigger>
                                          </DataTemplate.Triggers>
                                      </DataTemplate>

                                  </ItemsControl.ItemTemplate>
                              </ItemsControl>

                              <!-- Spell Selectors -->
                              <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=FeatDetails.Progressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=ClassProgressions, Converter={StaticResource CountToVisibilityConverter}}"/>

                              <ItemsControl ItemsSource="{Binding FeatDetails.SpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}" Visibility="{Binding FeatDetails.SpellSelectors.Count, Converter={StaticResource CountToVisibilityConverter}}"/>

                          </StackPanel>
                      </ScrollViewer>
                  </StackPanel>

              </DockPanel>

          <ControlTemplate.Triggers>
              <DataTrigger Value="False">
                  <DataTrigger.Binding>
                      <MultiBinding Converter="{StaticResource EqualConverter}">
                          <Binding Path="SelectedFeatDetails.FeatDetails.SelectedAbilityCount"/>
                          <Binding Path="SelectedFeatDetails.FeatDetails.MaxSelectedAbilityCount"/>
                      </MultiBinding>
                  </DataTrigger.Binding>
                  <Setter TargetName="AbilitySelectionTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                  <Setter TargetName="AbilitySelectionValue" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
              </DataTrigger>

              <DataTrigger Value="False">
                  <DataTrigger.Binding>
                      <MultiBinding Converter="{StaticResource EqualConverter}">
                          <Binding Path="SelectedFeatDetails.FeatSkills.SelectedSkillCount"/>
                          <Binding Path="SelectedFeatDetails.FeatSkills.MaxSelectedSkillCount"/>
                      </MultiBinding>
                  </DataTrigger.Binding>
                  <Setter TargetName="SkillSelectionTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
                  <Setter TargetName="SkillSelectionValue" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
              </DataTrigger>
          </ControlTemplate.Triggers>
          </ControlTemplate>

          
</ResourceDictionary>