<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:System="clr-namespace:System;assembly=mscorlib"
					xmlns:ls="clr-namespace:ls;assembly=Code"
					xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
					mc:Ignorable="d">

    <!-- Progression Feature Templates -->
    <DataTemplate x:Key="progressionActionsTemplate" DataType="ls:VMProgression">
        <ContentControl Template="{StaticResource progressionFeaturesSpellList}" DataContext="{Binding Features.Actions}" Content="{Binding Source='h420f4742g1f0dg4d44gb326g4a8f7547b7a3', Converter={StaticResource TranslatedStringConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="progressionCantripsTemplate" DataType="ls:VMProgression">
        <ContentControl Template="{StaticResource progressionFeaturesSpellList}" DataContext="{Binding Features.Cantrips}" Content="{Binding Source='h420f4742g1f0dg4d44gb326g4a8f7547b7a3', Converter={StaticResource TranslatedStringConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="progressionSpellsTemplate" DataType="ls:VMProgression">
        <ContentControl Template="{StaticResource progressionFeaturesSpellList}" DataContext="{Binding Features.Spells}" Content="{Binding Source='h420f4742g1f0dg4d44gb326g4a8f7547b7a3', Converter={StaticResource TranslatedStringConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="skillProgressionTemplate" DataType="ls:VMSkill">
        <ContentControl Template="{StaticResource ListButtonTemplate}" x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right">
            <Grid>
                <Grid Style="{StaticResource FeatureListItemIconHolder}"/>
                <Control Template="{StaticResource SkillDisplayName}" FontSize="{StaticResource ScaledDefaultFontSize}" FontWeight="SemiBold" Foreground="{StaticResource LS_accent100TxtColor}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="160,0,0,0"/>
                <TextBlock x:Name="featureType" Text="{Binding Source='h6df70972gfd55g4f29g9431g0a1530858ccf', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource FeatureListItemKind}"/>
            </Grid>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="abilityProgressionTemplate" DataType="ls:VMAbility">
        <ContentControl Template="{StaticResource ListButtonTemplate}" x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right">
            <Grid>
                <Grid Style="{StaticResource FeatureListItemIconHolder}"/>
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource FeatureListItemName}">
                    <b:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}"/>
                    </b:Interaction.Behaviors>
                </TextBlock>
            </Grid>
        </ContentControl>
    </DataTemplate>

    <ControlTemplate x:Key="spellReplaceTemplate">
        <StackPanel Width="{StaticResource gameplayPanelWidth}" HorizontalAlignment="Left">
            <!-- Header Section -->
            <ContentControl Template="{StaticResource HUI_SelectorHeader}"/>
            <ContentControl Template="{StaticResource HUI_CarouselHeaderDecorator}">
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h000011feg0be5g4f09g978eg030b3e2e62c6', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" Height="100" Margin="0,-10,0,10"/>
            </ContentControl>
            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h7d40d764gac52g4ccbgb18eg136c928dd69e', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelDescriptionText}" Margin="0,20,0,0"/>
            
            <!-- Content Section -->
            <Grid MaxHeight="{StaticResource spellReplacementPanelHeight}">
                <StackPanel x:Name="replaceSummary" ls:MoveFocus.IsMoveFocusScope="True">

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,100,0,0">

                        <StackPanel Margin="0,0,50,0">
                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=hd19b7627gc9c3g4ff4ga827g5d68b0ce1409, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelSubHeaderText}"/>

                            <ls:LSButton x:Name="outSpell" ls:MoveFocus.Focusable="True" Focusable="True">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="LSButtonReleased" >
                                        <b:ChangePropertyAction TargetName="replaceSummary" PropertyName="Visibility" Value="Hidden" />
                                        <b:ChangePropertyAction TargetName="replaceChooseOutSpell" PropertyName="Visibility" Value="Visible" />
                                        <b:ChangePropertyAction TargetName="replaceChooseOutSpell" PropertyName="IsEnabled" Value="True" />
                                        <b:ChangePropertyAction TargetName="replaceChooseOutSpell" PropertyName= "Template" Value="{StaticResource chooseReplacedOutSpellPanelTemplate}"/>
                                        <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c" FocusElement="{Binding ElementName=replaceChooseOutSpell}"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <ls:LSButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Image Source="{StaticResource SpellReplaceFrame}" Stretch="None"/>
                                            <Rectangle Fill="{Binding ClassProgressionDetails.OutSpellReplacement.Spell.Icon}" Width="100" Height="100"/>
                                            <Image Source="{StaticResource SpellReplaceOutOverlay}" Stretch="None"/>
                                            <Control x:Name="frame" Width="150" Height="150" Template="{StaticResource FocusedOnlyIndicatorTemplate}" Visibility="{Binding Path=(ls:MoveFocus.IsFocused), RelativeSource={RelativeSource AncestorType={x:Type ls:LSButton}}, Converter={StaticResource BoolToVisibleConverter}}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ls:LSButton.Template>
                            </ls:LSButton>
                        </StackPanel>

                        <Image Source="{StaticResource SideArrowChunky}" Stretch="None" VerticalAlignment="Bottom" Margin="0,0,0,60"/>

                        <StackPanel Margin="50,0,0,0">
                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h19bc3d6bg4c93g413fga949g4db364084cf4, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelSubHeaderText}"/>

                            <ls:LSButton x:Name="inSpell" ls:MoveFocus.Focusable="True" Focusable="True">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="LSButtonReleased" >
                                        <b:ChangePropertyAction TargetName="replaceSummary" PropertyName="Visibility" Value="Hidden" />
                                        <b:ChangePropertyAction TargetName="replaceChooseInSpell" PropertyName="Visibility" Value="Visible" />
                                        <b:ChangePropertyAction TargetName="replaceChooseInSpell" PropertyName="IsEnabled" Value="True" />
                                        <b:ChangePropertyAction TargetName="replaceChooseInSpell" PropertyName= "Template" Value="{StaticResource chooseReplacedInSpellPanelTemplate}"/>
                                        <ls:SetMoveFocusAction TargetName="CharacterLevelUp_c" FocusElement="{Binding ElementName=replaceChooseInSpell}"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <ls:LSButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Image Source="{StaticResource SpellReplaceFrame}" Stretch="None"/>
                                            <Rectangle Fill="{Binding ClassProgressionDetails.InSpellReplacement.Spell.Icon}" Width="100" Height="100"/>
                                            <Control x:Name="frame" Width="150" Height="150" Template="{StaticResource FocusedOnlyIndicatorTemplate}" Visibility="{Binding Path=(ls:MoveFocus.IsFocused), RelativeSource={RelativeSource AncestorType={x:Type ls:LSButton}}, Converter={StaticResource BoolToVisibleConverter}}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ls:LSButton.Template>
                            </ls:LSButton>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

                <Control x:Name="replaceChooseOutSpell" Visibility="Collapsed" IsEnabled="False" ls:MoveFocus.IsMoveFocusScope="True"/>

                <Control x:Name="replaceChooseInSpell" Visibility="Collapsed" IsEnabled="False" ls:MoveFocus.IsMoveFocusScope="True"/>

            </Grid>
        </StackPanel>
        
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=outSpell, Path=(ls:MoveFocus.IsFocused)}" Value="True">
                <Setter TargetName="outSpell" Property="BoundEvent" Value="UIAccept"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=inSpell, Path=(ls:MoveFocus.IsFocused)}" Value="True">
                <Setter TargetName="inSpell" Property="BoundEvent" Value="UIAccept"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    </ResourceDictionary>